var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppConfigModule.html",[0,0.887,1,1.896]],["body/modules/AppConfigModule.html",[0,1.327,1,3.439,2,1.416,3,2.159,4,3.145,5,3.145,6,3.633,7,0.031,8,2.576,9,1.994,10,1.821,11,0.445,12,0.395,13,0.347,14,3.761,15,3.149,16,1.237,17,1.306,18,3.761,19,2.195,20,4.064,21,3.761,22,4.859,23,3.761,24,4.859,25,3.761,26,4.859,27,3.761,28,4.859,29,3.761,30,4.859,31,3.761,32,4.064,33,3.761,34,3.54,35,3.145,36,1.821,37,3.761,38,3.761,39,1.206,40,3.761,41,3.761,42,3.761,43,2.195,44,0.445,45,0.131,46,0.023,47,0.023]],["title/classes/CreatePetInputDto.html",[45,0.113,48,1.327]],["body/classes/CreatePetInputDto.html",[7,0.032,11,0.351,12,0.312,13,0.274,16,0.931,39,1.921,44,0.644,45,0.189,46,0.02,47,0.02,48,1.693,49,1.118,50,1.574,51,0.481,52,1.132,53,1.26,54,0.579,55,1.773,56,1.438,57,1.574,58,0.952,59,2.969,60,2.788,61,3.306,62,2.788,63,2.634,64,2.198,65,1.733,66,1.118,67,2.313,68,2.504,69,2.313,70,1.574,71,1.413,72,1.733,73,1.213,74,1.574,75,1.733,76,3.252,77,1.118,78,1.319,79,1.796,80,1.438,81,1.574,82,1.574,83,1.733,84,1.213,85,1.841,86,1.319,87,1.319,88,1.319,89,0.952]],["title/classes/FilterPetDto.html",[45,0.113,77,1.223]],["body/classes/FilterPetDto.html",[7,0.032,11,0.298,12,0.265,13,0.232,16,0.851,39,1.975,44,0.604,45,0.178,46,0.018,47,0.018,48,1.03,49,0.949,50,1.337,51,0.409,52,1.007,53,1.01,54,1.04,55,1.706,56,2.584,57,2.828,58,1.71,60,2.546,61,3.214,62,2.546,63,2.473,64,1.956,65,1.472,66,0.949,67,2.324,68,2.669,69,2.324,70,1.337,71,1.291,72,1.472,73,1.03,74,1.337,75,1.472,76,3.305,77,1.389,78,1.937,79,1.853,80,2.112,81,2.312,82,2.312,83,2.546,84,1.03,85,1.639,86,1.12,87,1.12,88,1.12,89,0.809,90,1.925,91,2.522,92,2.522,93,2.522,94,2.522,95,2.522,96,2.522]],["title/classes/FindAndCountAllPetResponseDto.html",[45,0.113,84,1.327]],["body/classes/FindAndCountAllPetResponseDto.html",[7,0.032,11,0.34,12,0.302,13,0.265,16,0.915,39,1.907,44,0.636,45,0.187,46,0.019,47,0.019,48,1.174,49,1.081,50,1.523,51,0.466,52,1.106,53,1.087,54,0.79,55,1.731,56,1.962,57,2.147,58,1.299,60,2.738,61,3.288,62,2.738,63,2.602,64,2.147,65,1.677,66,1.081,67,2.272,68,2.468,69,2.272,70,1.523,71,1.508,72,1.677,73,1.174,74,1.523,75,1.677,76,3.288,77,1.081,78,1.276,79,1.866,80,1.391,81,1.523,82,1.523,83,1.677,84,1.655,85,2.263,86,2.084,87,2.084,88,1.276,89,0.921,97,2.872,98,2.872]],["title/classes/FindOneFilterPetDto.html",[45,0.113,88,1.443]],["body/classes/FindOneFilterPetDto.html",[7,0.032,11,0.337,12,0.299,13,0.262,16,0.91,39,1.951,44,0.634,45,0.186,46,0.019,47,0.019,48,1.163,49,1.071,50,1.509,51,0.461,52,1.099,53,1.24,54,0.785,55,1.756,56,1.949,57,2.133,58,1.29,60,2.725,61,3.283,62,2.725,63,2.593,64,2.133,65,1.661,66,1.071,67,2.261,68,2.457,69,2.261,70,1.509,71,1.382,72,1.661,73,1.163,74,1.509,75,1.661,76,3.283,77,1.071,78,1.264,79,1.86,80,1.378,81,1.509,82,1.509,83,1.661,84,1.163,85,1.787,86,1.264,87,1.264,88,1.787,89,1.497,90,1.627,99,2.846,100,2.846]],["title/interfaces/GqlResponse.html",[101,1.128,102,1.896]],["body/interfaces/GqlResponse.html",[7,0.031,11,0.486,12,0.431,13,0.379,44,0.664,46,0.024,47,0.024,51,0.666,52,1.404,54,1.094,55,1.875,79,2.145,86,1.825,87,1.825,101,1.949,102,3.001,103,1.99,104,2.663,105,2.689,106,2.932,107,2.179,108,2.663,109,2.399,110,2.179]],["title/classes/GqlResponseDto.html",[45,0.113,111,2.366]],["body/classes/GqlResponseDto.html",[7,0.031,11,0.503,12,0.446,13,0.392,44,0.503,45,0.148,46,0.025,47,0.025,49,1.6,51,0.689,52,1.434,53,0.985,54,1.111,55,1.761,58,1.827,90,1.363,105,2.531,106,2.759,111,3.825,112,3.554,113,2.754,114,5.25,115,6.113,116,5.25,117,2.481,118,2.754,119,4.25,120,4.25]],["title/classes/HttpExceptionFilter.html",[45,0.113,121,2.366]],["body/classes/HttpExceptionFilter.html",[7,0.032,11,0.255,12,0.226,13,0.199,16,0.866,17,0.748,44,0.255,45,0.075,46,0.016,47,0.016,49,0.811,51,0.349,53,0.499,54,0.42,58,0.691,66,0.811,90,0.691,105,2.235,106,2.437,107,2.928,108,3.26,109,2.937,117,1.257,121,2.389,122,2.743,123,1.802,124,3.279,125,3.971,126,2.125,127,2.105,128,4.439,129,3.279,130,4.439,131,3.321,132,4.439,133,2.154,134,5.992,135,1.396,136,2.389,137,2.743,138,3.279,139,2.743,140,3.279,141,3.279,142,3.279,143,2.154,144,1.569,145,1.569,146,1.569,147,1.569,148,1.569,149,1.569,150,1.396,151,2.154,152,2.154,153,1.802,154,2.675,155,2.154,156,2.154,157,2.154,158,2.154,159,2.154,160,2.154,161,1.257,162,2.154,163,2.154,164,2.154,165,2.154,166,2.154,167,2.154,168,1.802,169,1.802,170,5.032,171,5.032,172,5.032,173,2.401,174,5.032,175,5.032,176,5.032,177,2.154,178,5.032,179,2.154,180,5.032,181,2.154,182,2.154,183,2.154,184,2.154,185,2.154,186,2.154,187,2.154,188,2.154,189,2.154,190,2.154]],["title/interfaces/IFindAndCountAll.html",[101,1.128,110,1.722]],["body/interfaces/IFindAndCountAll.html",[7,0.031,11,0.493,12,0.437,13,0.384,44,0.668,46,0.025,47,0.025,51,0.675,52,1.416,54,1.185,55,1.749,79,2.152,86,2.624,87,2.624,101,1.961,102,2.431,103,2.017,104,2.699,105,2.303,106,2.511,107,2.208,108,2.699,109,2.431,110,2.749]],["title/interfaces/IOptionalPet.html",[101,1.128,191,2.105]],["body/interfaces/IOptionalPet.html",[7,0.03,11,0.458,12,0.406,13,0.356,44,0.585,46,0.023,47,0.023,51,0.627,52,1.351,53,1.377,54,1.121,55,1.938,89,1.906,90,2.043,101,1.718,103,1.872,191,3.205,192,2.816,193,3.851,194,3.851,195,3.851,196,2.257,197,4.137]],["title/interfaces/IPet.html",[101,1.128,196,1.896]],["body/interfaces/IPet.html",[7,0.03,11,0.46,12,0.408,13,0.359,44,0.588,46,0.024,47,0.024,51,0.631,52,1.356,53,1.38,54,1.124,55,1.939,89,1.909,90,2.009,101,1.725,103,1.884,191,2.521,192,2.834,193,3.859,194,3.859,195,3.859,196,2.899,197,4.154]],["title/modules/MainModule.html",[0,0.887,198,2.105]],["body/modules/MainModule.html",[0,1.202,1,3.378,2,1.22,3,1.956,6,3.131,7,0.032,8,2.334,9,1.718,10,1.569,11,0.383,12,0.34,13,0.299,16,1.175,17,1.125,19,1.891,32,2.71,36,2.132,39,1.72,43,1.891,44,0.383,45,0.113,46,0.021,47,0.021,66,1.22,154,1.569,161,1.891,173,1.324,198,4.069,199,2.71,200,2.71,201,3.378,202,3.378,203,3.378,204,3.24,205,3.24,206,4.402,207,3.24,208,4.402,209,3.24,210,2.71,211,3.24,212,3.24,213,3.24,214,3.24,215,3.24,216,2.36,217,2.36,218,3.24,219,3.24,220,3.24,221,3.24,222,3.24,223,3.24,224,2.71,225,3.24,226,3.24,227,3.24,228,3.24,229,2.36,230,3.24]],["title/classes/Pet.html",[45,0.113,71,0.961]],["body/classes/Pet.html",[7,0.032,11,0.295,12,0.262,13,0.23,16,0.845,39,1.703,44,0.295,45,0.087,46,0.017,47,0.017,49,0.938,51,0.404,52,0.998,53,1.003,54,1.139,55,1.773,56,2.461,57,2.296,58,1.629,61,2.816,63,1.771,64,1.938,66,0.938,71,1.082,74,1.938,76,2.816,79,1.27,85,2.12,89,1.389,90,1.805,173,2.17,193,3.293,194,3.293,195,3.293,231,2.084,232,4.331,233,4.331,234,5.082,235,4.331,236,2.492,237,2.492,238,2.492,239,4.772,240,2.492,241,2.492,242,2.492,243,2.492,244,3.058,245,5.312,246,2.492,247,3.656,248,3.656,249,1.815,250,2.492,251,3.058,252,2.084,253,2.492,254,2.492,255,2.492,256,2.492,257,1.815,258,2.492,259,2.492,260,2.492,261,2.492,262,2.492,263,4.331,264,2.492,265,2.492,266,4.331,267,3.622,268,3.622,269,4.331,270,3.155,271,4.331,272,4.331,273,4.331,274,2.492,275,2.492,276,2.492,277,2.492]],["title/injectables/PetsCore.html",[278,1.896,279,1.573]],["body/injectables/PetsCore.html",[7,0.032,11,0.274,12,0.243,13,0.213,16,1.075,17,0.804,39,0.742,44,0.274,45,0.081,46,0.016,47,0.016,51,0.375,53,1.198,54,0.809,58,1.476,67,1.121,68,1.677,69,1.121,70,1.227,71,1.531,77,1.855,78,1.028,80,1.121,81,1.227,82,1.227,88,2.045,89,0.742,90,1.476,110,1.227,113,2.244,117,2.687,118,3.193,126,2.244,127,2.987,135,2.688,136,3.767,153,1.936,154,2.505,169,2.896,173,1.881,196,2.687,249,1.686,268,1.936,278,2.021,279,1.677,280,1.686,281,1.936,282,2.896,283,3.022,284,3.022,285,2.315,286,2.315,287,3.462,288,3.462,289,4.243,290,3.85,291,2.315,292,4.928,293,2.315,294,4.122,295,2.315,296,2.315,297,4.122,298,2.315,299,2.315,300,1.5,301,2.315,302,1.5,303,1.686,304,2.315,305,1.686,306,2.315,307,2.315,308,1.686,309,2.315,310,2.315,311,1.686,312,2.315,313,3.462,314,2.315,315,2.315,316,3.462,317,2.315,318,2.315,319,1.686,320,2.315,321,1.686,322,2.315,323,2.315,324,2.315,325,2.315,326,2.315,327,2.315,328,2.315,329,2.315,330,2.315,331,2.315,332,2.315,333,2.315,334,2.315,335,2.315,336,2.315,337,2.315,338,4.148,339,3.462,340,2.315,341,2.315,342,2.315,343,2.315,344,2.315,345,1.686,346,2.315]],["title/modules/PetsCoreModule.html",[0,0.887,347,1.896]],["body/modules/PetsCoreModule.html",[0,1.419,2,1.573,3,2.308,7,0.031,8,2.754,9,2.215,10,2.024,11,0.495,12,0.439,13,0.385,15,2.708,16,1.153,17,1.451,36,2.024,43,3.032,44,0.495,45,0.145,46,0.025,47,0.025,71,1.237,279,3.003,300,2.708,302,2.708,347,3.62,348,3.495,349,3.495,350,4.179,351,4.345,352,4.179,353,4.179]],["title/classes/PetsResolver.html",[45,0.113,354,2.105]],["body/classes/PetsResolver.html",[7,0.032,11,0.289,12,0.256,13,0.225,16,0.922,44,0.289,45,0.085,46,0.017,47,0.017,48,1.931,49,0.92,51,0.396,53,1.347,54,1.115,55,0.723,56,2.441,58,1.691,63,2.289,66,0.92,71,1.72,73,1.931,77,1.779,79,1.985,84,1.472,89,1.691,90,1.691,113,1.583,117,3.078,126,2.335,127,3.03,135,3.266,154,1.745,173,2.059,257,3.443,283,2.625,284,2.625,302,1.583,305,1.779,308,1.779,345,3.119,354,2.335,355,2.043,356,3.013,357,3.603,358,4.281,359,2.443,360,2.796,361,2.443,362,2.443,363,4.281,364,2.443,365,3.013,366,2.043,367,3.603,368,2.443,369,4.215,370,3.119,371,2.043,372,2.443,373,2.443,374,2.443,375,2.443,376,3.953,377,2.443,378,3.603,379,4.726,380,2.443,381,2.443,382,2.043,383,2.443,384,2.443,385,2.443,386,2.443,387,2.443,388,2.443,389,2.443,390,2.443,391,2.443,392,2.443,393,2.443,394,1.779,395,2.443]],["title/modules/PetsResolverModule.html",[0,0.887,201,1.896]],["body/modules/PetsResolverModule.html",[0,1.434,2,1.6,3,2.332,7,0.031,8,2.783,9,2.253,10,2.058,11,0.503,12,0.446,13,0.392,15,2.754,16,1.111,17,1.476,36,2.543,43,2.481,44,0.503,45,0.148,46,0.025,47,0.025,201,3.635,354,3.402,396,3.554,397,3.554,398,3.635,399,4.25,400,4.25,401,4.25]],["title/injectables/PetsService.html",[278,1.896,360,1.722]],["body/injectables/PetsService.html",[7,0.031,11,0.256,12,0.227,13,0.199,16,0.933,17,0.751,44,0.256,45,0.075,46,0.016,47,0.016,48,1.817,51,0.35,53,1.213,54,0.983,58,1.615,71,1.759,73,1.817,77,1.674,79,1.92,84,0.883,89,1.679,90,1.615,105,1.975,106,2.154,113,1.401,117,2.941,118,3.1,126,2.131,127,3.179,135,3.1,136,3.932,137,2.75,139,3.719,150,2.578,154,2.44,173,1.954,249,1.575,257,2.395,278,1.919,279,2.44,280,1.575,282,2.75,283,2.899,284,2.395,289,4.511,290,3.719,294,3.719,297,3.719,302,1.401,305,1.575,308,1.575,311,3.239,345,3.671,356,2.75,360,1.743,365,1.808,366,1.808,369,2.75,370,1.575,371,2.75,376,3.328,382,1.808,402,1.808,403,3.288,404,3.979,405,2.162,406,2.162,407,3.288,408,2.162,409,2.162,410,2.162,411,3.288,412,4.447,413,2.162,414,2.162,415,4.447,416,2.162,417,1.808,418,4.447,419,2.162,420,4.447,421,2.162,422,2.162,423,2.162,424,2.162,425,2.162,426,3.328,427,2.162,428,2.162]],["title/modules/PetsServiceModule.html",[0,0.887,398,1.896]],["body/modules/PetsServiceModule.html",[0,1.345,2,1.446,3,2.189,7,0.031,8,2.612,9,2.037,10,1.861,11,0.455,12,0.403,13,0.354,15,3.193,16,1.119,17,1.334,36,2.386,43,2.876,44,0.455,45,0.134,46,0.023,47,0.023,279,2.94,347,3.543,360,3.416,398,3.74,417,3.213,429,3.213,430,3.213,431,3.213,432,3.842,433,3.842,434,3.842,435,3.842]],["title/modules/PinoLoggerModule.html",[0,0.887,202,1.896]],["body/modules/PinoLoggerModule.html",[0,1.359,2,1.469,6,3.198,7,0.032,11,0.462,12,0.41,13,0.36,16,1.068,17,1.355,19,2.278,36,1.89,39,1.596,44,0.462,45,0.136,46,0.024,47,0.024,127,2.069,154,1.89,161,2.278,173,1.594,202,2.905,216,2.843,217,2.843,224,3.264,229,2.843,289,2.843,436,3.902,437,3.902,438,3.902,439,3.264,440,4.162,441,3.902,442,3.264,443,3.264,444,3.902,445,3.902,446,3.902,447,3.264,448,3.902,449,3.902,450,3.902,451,3.902,452,3.902,453,3.902,454,3.902]],["title/modules/PostgresModule.html",[0,0.887,203,1.896]],["body/modules/PostgresModule.html",[0,1.244,2,1.284,6,2.995,7,0.032,11,0.403,12,0.358,13,0.314,16,1.068,17,1.184,19,1.99,36,1.651,39,1.461,44,0.403,45,0.119,46,0.022,47,0.022,71,1.348,85,2.024,127,1.807,131,4.292,154,2.485,161,1.99,173,1.393,203,2.659,216,2.484,217,2.484,229,2.484,300,2.209,321,2.484,351,2.851,442,2.851,443,2.851,455,3.409,456,3.409,457,3.409,458,3.409,459,3.409,460,3.409,461,3.409,462,5.132,463,5.132,464,5.132,465,4.292,466,5.132,467,4.292,468,5.132,469,4.292,470,5.132,471,4.292,472,4.556,473,2.851,474,3.409,475,3.409,476,3.409,477,3.409,478,3.409,479,3.409,480,3.409,481,3.409,482,3.409]],["title/interfaces/Response.html",[101,1.128,107,1.722]],["body/interfaces/Response.html",[7,0.031,11,0.462,12,0.41,13,0.36,44,0.648,46,0.024,47,0.024,51,0.633,52,1.359,54,1.162,55,1.856,79,2.178,86,1.733,87,1.733,90,1.85,101,1.903,102,2.278,103,1.89,104,2.529,105,2.648,106,2.887,107,2.638,108,3.739,109,3.368,110,2.069]],["title/classes/UpdatePetInputDto.html",[45,0.113,73,1.327]],["body/classes/UpdatePetInputDto.html",[7,0.032,11,0.348,12,0.309,13,0.271,16,0.927,39,1.942,44,0.641,45,0.189,46,0.02,47,0.02,48,1.201,49,1.107,50,1.559,51,0.477,52,1.124,53,1.255,54,0.573,55,1.77,56,1.424,57,1.559,58,0.943,60,2.773,61,3.301,62,2.773,63,2.624,64,2.183,65,1.716,66,1.107,67,2.301,68,2.493,69,2.301,70,1.559,71,1.406,72,1.716,73,1.682,74,1.559,75,1.716,76,3.276,77,1.107,78,1.306,79,1.788,80,1.424,81,1.559,82,1.559,83,1.716,84,1.201,85,1.829,86,1.306,87,1.306,88,1.306,89,0.943,90,1.32,483,2.94]],["title/coverage.html",[484,3.688]],["body/coverage.html",[7,0.031,13,0.272,34,2.147,45,0.208,46,0.02,47,0.02,48,1.204,50,2.875,54,0.575,71,0.872,73,1.204,77,1.11,84,1.204,88,1.309,101,1.884,102,1.72,104,3.083,107,1.563,110,1.563,111,2.147,112,2.465,121,2.147,122,2.465,123,2.465,144,2.147,145,2.147,146,2.147,147,2.147,148,2.147,149,2.147,150,1.91,191,1.91,192,3.005,196,1.72,231,2.465,244,2.465,278,2.407,279,1.427,281,2.465,303,2.147,311,2.147,354,1.91,355,2.465,360,1.563,394,2.147,402,2.465,484,2.465,485,2.465,486,2.947,487,2.947,488,5.473,489,4.124,490,4.758,491,4.758,492,5.153,493,2.947,494,2.465,495,6.06,496,6.126,497,4.758,498,2.465,499,4.826,500,4.924,501,2.465,502,2.465,503,2.947,504,2.465,505,2.947]],["title/dependencies.html",[3,1.733,506,2.278]],["body/dependencies.html",[3,1.593,7,0.032,17,1.246,19,2.093,45,0.164,46,0.022,47,0.022,66,1.35,210,3,251,3.941,252,3,300,2.324,439,3,440,3.941,447,3,507,4.712,508,5.262,509,3.587,510,3.587,511,3.587,512,3.941,513,3.587,514,3.587,515,3.587,516,3.587,517,3.587,518,3.587,519,3.587,520,3.587,521,3.587,522,3.587,523,3.587,524,3.587,525,3.587,526,3.587,527,3.587,528,3.587,529,3.587,530,3,531,3.587,532,3.587,533,3.587,534,3.587,535,3.587,536,3.587,537,3.587,538,3.587,539,3.587,540,3.587,541,3.587,542,3,543,3.587,544,3.587,545,3.587,546,3.587,547,3.587,548,3.587,549,3.587,550,3.587,551,3.587,552,3.587,553,3.587,554,3.587,555,3.587,556,3.587,557,3.587,558,3.587,559,3.587,560,3.587,561,3.587,562,3.587]],["title/miscellaneous/enumerations.html",[563,1.444,564,3.262]],["body/miscellaneous/enumerations.html",[7,0.031,39,1.184,46,0.023,47,0.023,51,0.599,53,1.113,67,2.326,68,2.326,69,2.326,85,1.641,89,1.54,118,2.393,193,3.112,194,3.112,195,3.112,270,4.796,563,1.958,564,3.089,565,4.803,566,5.652,567,3.693,568,4.803,569,4.803,570,4.803,571,4.803,572,4.803,573,4.803,574,4.803,575,4.803,576,4.803,577,5.652,578,5.652]],["title/miscellaneous/functions.html",[563,1.444,579,3.262]],["body/miscellaneous/functions.html",[7,0.027,46,0.027,47,0.027,51,0.808,502,4.169,504,5.1,563,2.643,579,4.169,580,4.984]],["title/index.html",[51,0.442,581,2.278,582,2.278]],["body/index.html",[7,0.028,46,0.028,47,0.028,542,4.272,583,5.108]],["title/license.html",[581,2.278,582,2.278,584,1.984]],["body/license.html",[7,0.012,10,0.528,12,0.5,13,0.381,16,0.213,20,0.912,45,0.038,46,0.009,47,0.009,53,0.575,58,0.35,78,0.484,103,0.528,105,1.103,109,0.636,267,0.912,319,0.794,485,2.076,512,1.574,530,0.912,584,4.328,585,2.954,586,1.808,587,2.482,588,1.09,589,1.09,590,1.09,591,4.322,592,4.878,593,4.488,594,2.954,595,3.334,596,1.09,597,5.074,598,4.488,599,1.09,600,1.09,601,0.912,602,1.09,603,4.488,604,4.878,605,3.646,606,4.488,607,1.882,608,1.09,609,3.334,610,1.09,611,1.09,612,1.09,613,2.954,614,1.09,615,4.322,616,2.954,617,1.882,618,1.882,619,1.09,620,2.482,621,1.882,622,1.882,623,1.09,624,1.09,625,5.305,626,2.954,627,1.882,628,3.646,629,1.09,630,1.882,631,1.09,632,1.09,633,1.09,634,1.09,635,1.09,636,1.09,637,1.09,638,1.09,639,2.482,640,1.09,641,2.482,642,1.882,643,4.878,644,1.09,645,1.09,646,3.646,647,4.322,648,2.954,649,1.882,650,1.09,651,2.482,652,3.049,653,1.09,654,1.09,655,1.09,656,1.09,657,1.09,658,1.882,659,1.09,660,1.09,661,1.09,662,5.94,663,2.482,664,1.882,665,0.912,666,1.09,667,4.322,668,1.882,669,1.09,670,1.09,671,3.334,672,1.882,673,1.09,674,5.305,675,5.369,676,1.09,677,1.09,678,1.09,679,1.09,680,1.09,681,1.09,682,1.09,683,1.882,684,1.882,685,2.482,686,1.09,687,1.09,688,1.09,689,1.09,690,1.09,691,2.954,692,3.334,693,1.09,694,1.882,695,2.954,696,1.882,697,1.09,698,3.334,699,1.882,700,1.09,701,1.09,702,2.482,703,1.09,704,1.09,705,1.09,706,1.09,707,1.882,708,1.09,709,1.09,710,1.09,711,2.482,712,1.09,713,1.09,714,2.482,715,1.09,716,1.09,717,1.09,718,2.954,719,4.488,720,1.09,721,1.09,722,1.882,723,4.131,724,2.482,725,1.882,726,2.954,727,1.882,728,1.882,729,1.882,730,1.882,731,2.482,732,1.882,733,2.482,734,1.882,735,1.882,736,1.882,737,1.882,738,1.09,739,1.882,740,1.882,741,1.09,742,1.09,743,3.334,744,3.908,745,2.482,746,1.882,747,1.09,748,1.09,749,1.882,750,1.882,751,1.09,752,1.09,753,2.482,754,1.882,755,1.09,756,1.09,757,1.09,758,2.482,759,1.09,760,1.09,761,1.09,762,1.882,763,1.882,764,1.09,765,1.09,766,1.09,767,1.09,768,1.09,769,1.09,770,1.882,771,1.09,772,1.09,773,1.09,774,1.09,775,1.09,776,1.09,777,1.09,778,3.334,779,1.09,780,2.482,781,1.09,782,1.09,783,2.482,784,1.09,785,1.09,786,1.09,787,1.09,788,4.131,789,1.09,790,1.09,791,1.09,792,1.09,793,1.09,794,2.954,795,1.882,796,2.954,797,1.09,798,1.09,799,2.954,800,1.09,801,1.09,802,1.09,803,1.09,804,2.482,805,1.09,806,1.09,807,1.882,808,1.882,809,1.09,810,1.09,811,1.09,812,1.09,813,1.882,814,1.882,815,1.09,816,1.09,817,3.334,818,1.09,819,1.09,820,1.09,821,1.09,822,1.09,823,1.09,824,1.09,825,2.482,826,2.954,827,1.09,828,1.09,829,1.09,830,1.09,831,1.09,832,1.09,833,1.09,834,1.09,835,1.09,836,1.09,837,1.09,838,1.882,839,1.09,840,1.09,841,1.882,842,0.912,843,1.09,844,1.09,845,2.47,846,1.09,847,1.09,848,1.09,849,1.09,850,1.09,851,1.09,852,1.09,853,2.954,854,2.482,855,2.482,856,2.482,857,1.882,858,1.882,859,2.482,860,1.882,861,1.882,862,1.882,863,1.09,864,1.09,865,1.09,866,1.09,867,1.09,868,1.09,869,1.09,870,1.09,871,1.09,872,1.882,873,1.09,874,1.09,875,1.09,876,1.09,877,3.334,878,1.09,879,1.09,880,1.09,881,1.09,882,1.09,883,1.09,884,1.09,885,1.09,886,1.09,887,3.334,888,1.09,889,1.09,890,1.09,891,1.09,892,1.09,893,1.09,894,1.09,895,1.09,896,1.09,897,1.09,898,1.09,899,1.09,900,1.09,901,1.09,902,1.09,903,1.09,904,1.09,905,2.482,906,1.09,907,1.09,908,1.09,909,0.912,910,1.09,911,1.882,912,1.09,913,1.09,914,1.09,915,1.09,916,1.09,917,1.09,918,1.09,919,1.09,920,1.09,921,1.09,922,1.09,923,1.09,924,1.09,925,1.09,926,1.09,927,1.882,928,1.09,929,1.09,930,1.09,931,1.882,932,1.882,933,1.09,934,1.09,935,1.09,936,1.09,937,1.09,938,1.09,939,1.09,940,1.09,941,0.912,942,1.09,943,1.09,944,1.09,945,1.09,946,1.09,947,1.09,948,1.09,949,1.09,950,1.09,951,1.09,952,1.09,953,1.09,954,1.09,955,1.09,956,1.09]],["title/modules.html",[2,1.66]],["body/modules.html",[1,2.634,2,1.699,7,0.026,46,0.026,47,0.026,198,2.924,201,2.634,202,2.634,203,2.634,347,2.634,398,2.634,665,4.555,909,5.2,957,6.218,958,6.218,959,6.39,960,5.446]],["title/overview.html",[961,3.688]],["body/overview.html",[1,3.31,2,1.403,3,2.146,4,3.117,5,3.117,6,3.31,7,0.031,8,2.561,9,1.976,10,1.805,46,0.023,47,0.023,49,1.403,103,1.805,198,4.103,199,3.117,200,3.117,201,3.43,202,3.129,203,3.129,279,2.747,280,2.715,347,3.43,348,3.117,349,3.117,360,3.249,396,3.117,397,3.117,398,3.696,429,3.117,430,3.117,431,3.117,601,3.117,961,3.117,962,3.727,963,3.727,964,3.727]],["title/properties.html",[52,1.065,506,2.278]],["body/properties.html",[7,0.031,46,0.027,47,0.027,52,1.345,584,3.588,586,3.588,941,4.119,965,4.925,966,4.925,967,4.925]],["title/miscellaneous/variables.html",[563,1.444,968,3.262]],["body/miscellaneous/variables.html",[7,0.031,34,2.74,35,2.166,46,0.018,47,0.018,51,0.42,53,0.6,54,1.11,78,1.967,80,2.145,105,2.528,106,2.757,144,2.74,145,2.74,146,2.74,147,2.74,148,2.74,149,2.74,150,2.437,161,1.512,168,3.146,173,1.058,270,4.293,303,2.74,319,2.74,321,1.887,370,1.887,394,3.227,426,2.166,465,2.166,467,2.166,469,2.166,471,3.146,473,3.146,488,2.166,494,2.166,498,2.166,499,2.166,500,4.929,501,2.166,563,1.373,586,1.887,652,4.76,842,2.166,845,4.065,968,2.166,969,5.556,970,2.59,971,2.59,972,2.59,973,5.893,974,3.762,975,2.59,976,2.59,977,2.59,978,2.59,979,2.59,980,2.59,981,2.59,982,2.59,983,2.59,984,2.59,985,2.59,986,2.59,987,2.59,988,5.385,989,2.59,990,2.59,991,2.59,992,2.59,993,2.59,994,2.59,995,2.59,996,2.59,997,2.59,998,2.59,999,2.59,1000,3.762,1001,4.86,1002,2.59,1003,2.59,1004,2.59,1005,2.59,1006,2.59,1007,2.59,1008,2.59,1009,2.59,1010,2.59,1011,2.59,1012,2.59,1013,2.59,1014,2.59,1015,2.59,1016,2.59,1017,2.59,1018,2.59,1019,2.59,1020,2.59,1021,2.59,1022,3.762,1023,2.59,1024,2.59,1025,2.59]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"modules/MainModule.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"classes/PetsResolver.html":{},"modules/PetsResolverModule.html":{},"injectables/PetsService.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":488,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":965,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["0.5.34",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":493,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":319,"title":{},"body":{"injectables/PetsCore.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":321,"title":{},"body":{"injectables/PetsCore.html":{},"modules/PostgresModule.html":{},"miscellaneous/variables.html":{}}}],["10.0.16",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["16.0.1",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["16.5.0",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["17.6.0",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":963,"title":{},"body":{"overview.html":{}}}],["2.0",{"_index":587,"title":{},"body":{"license.html":{}}}],["2.1.0",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["2.29.3",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["2004",{"_index":589,"title":{},"body":{"license.html":{}}}],["3.0.2",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":964,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":633,"title":{},"body":{"license.html":{}}}],["7",{"_index":962,"title":{},"body":{"overview.html":{}}}],["7.0.3",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["7.6.0",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":601,"title":{},"body":{"license.html":{},"overview.html":{}}}],["above",{"_index":830,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":908,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":905,"title":{},"body":{"license.html":{}}}],["act",{"_index":915,"title":{},"body":{"license.html":{}}}],["acting",{"_index":611,"title":{},"body":{"license.html":{}}}],["acts",{"_index":885,"title":{},"body":{"license.html":{}}}],["add",{"_index":814,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":816,"title":{},"body":{"license.html":{}}}],["additional",{"_index":817,"title":{},"body":{"license.html":{}}}],["additions",{"_index":693,"title":{},"body":{"license.html":{}}}],["admin",{"_index":310,"title":{},"body":{"injectables/PetsCore.html":{}}}],["admin.name",{"_index":312,"title":{},"body":{"injectables/PetsCore.html":{}}}],["admin.save(options",{"_index":314,"title":{},"body":{"injectables/PetsCore.html":{}}}],["advised",{"_index":903,"title":{},"body":{"license.html":{}}}],["against",{"_index":763,"title":{},"body":{"license.html":{}}}],["agree",{"_index":918,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":856,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":835,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":767,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow('development",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allownull",{"_index":239,"title":{},"body":{"classes/Pet.html":{}}}],["alone",{"_index":759,"title":{},"body":{"license.html":{}}}],["along",{"_index":805,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":815,"title":{},"body":{"license.html":{}}}],["already",{"_index":422,"title":{},"body":{"injectables/PetsService.html":{}}}],["already_exist_error",{"_index":421,"title":{},"body":{"injectables/PetsService.html":{}}}],["and/or",{"_index":912,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":680,"title":{},"body":{"license.html":{}}}],["apache",{"_index":585,"title":{},"body":{"license.html":{}}}],["api_version",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apinotfounderror",{"_index":576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apollo",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["apollodriver",{"_index":208,"title":{},"body":{"modules/MainModule.html":{}}}],["apollodriverconfig",{"_index":209,"title":{},"body":{"modules/MainModule.html":{}}}],["appconfigmodule",{"_index":1,"title":{"modules/AppConfigModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["appear",{"_index":810,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":672,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":854,"title":{},"body":{"license.html":{}}}],["applies",{"_index":752,"title":{},"body":{"license.html":{}}}],["apply",{"_index":927,"title":{},"body":{"license.html":{}}}],["appropriate",{"_index":937,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":870,"title":{},"body":{"license.html":{}}}],["archives",{"_index":946,"title":{},"body":{"license.html":{}}}],["args",{"_index":380,"title":{},"body":{"classes/PetsResolver.html":{}}}],["args('id",{"_index":389,"title":{},"body":{"classes/PetsResolver.html":{}}}],["args('input",{"_index":390,"title":{},"body":{"classes/PetsResolver.html":{}}}],["argstype",{"_index":60,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/UpdatePetInputDto.html":{}}}],["argumentshost",{"_index":132,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arising",{"_index":892,"title":{},"body":{"license.html":{}}}],["asc",{"_index":577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["asia/jakarta').toisostring",{"_index":273,"title":{},"body":{"classes/Pet.html":{}}}],["asserted",{"_index":924,"title":{},"body":{"license.html":{}}}],["associated",{"_index":875,"title":{},"body":{"license.html":{}}}],["assume",{"_index":873,"title":{},"body":{"license.html":{}}}],["async",{"_index":127,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{}}}],["attach",{"_index":928,"title":{},"body":{"license.html":{}}}],["attached",{"_index":669,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":794,"title":{},"body":{"license.html":{}}}],["author",{"_index":967,"title":{},"body":{"properties.html":{}}}],["authorized",{"_index":607,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":663,"title":{},"body":{"license.html":{}}}],["autoincrement",{"_index":247,"title":{},"body":{"classes/Pet.html":{}}}],["autoloadmodels",{"_index":482,"title":{},"body":{"modules/PostgresModule.html":{}}}],["autoschemafile",{"_index":219,"title":{},"body":{"modules/MainModule.html":{}}}],["available",{"_index":665,"title":{},"body":{"license.html":{},"modules.html":{}}}],["await",{"_index":345,"title":{},"body":{"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["b",{"_index":784,"title":{},"body":{"license.html":{}}}],["bad",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bad_request_error",{"_index":144,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bad_request_error.code",{"_index":177,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["bad_request_error.message",{"_index":179,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["badrequesterror",{"_index":575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["badrequestexception",{"_index":137,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/PetsService.html":{}}}],["based",{"_index":676,"title":{},"body":{"license.html":{}}}],["basis",{"_index":858,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":698,"title":{},"body":{"license.html":{}}}],["below",{"_index":673,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":638,"title":{},"body":{"license.html":{}}}],["bigint",{"_index":197,"title":{},"body":{"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{}}}],["bind",{"_index":690,"title":{},"body":{"license.html":{}}}],["boilerplate",{"_index":929,"title":{},"body":{"license.html":{}}}],["bootstrap",{"_index":504,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bounded",{"_index":228,"title":{},"body":{"modules/MainModule.html":{}}}],["brackets",{"_index":932,"title":{},"body":{"license.html":{}}}],["browse",{"_index":959,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":957,"title":{},"body":{"modules.html":{}}}],["c",{"_index":791,"title":{},"body":{"license.html":{}}}],["ca",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":32,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/MainModule.html":{}}}],["cache.config",{"_index":33,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["carry",{"_index":786,"title":{},"body":{"license.html":{}}}],["catch",{"_index":128,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":129,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["cause",{"_index":622,"title":{},"body":{"license.html":{}}}],["certificate",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changed",{"_index":790,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["character",{"_index":891,"title":{},"body":{"license.html":{}}}],["charge",{"_index":733,"title":{},"body":{"license.html":{}}}],["choose",{"_index":906,"title":{},"body":{"license.html":{}}}],["claim",{"_index":764,"title":{},"body":{"license.html":{}}}],["claims",{"_index":754,"title":{},"body":{"license.html":{}}}],["class",{"_index":45,"title":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/Pet.html":{},"classes/PetsResolver.html":{},"classes/UpdatePetInputDto.html":{}},"body":{"modules/AppConfigModule.html":{},"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"modules/MainModule.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"classes/PetsResolver.html":{},"modules/PetsResolverModule.html":{},"injectables/PetsService.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"classes/UpdatePetInputDto.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["classes",{"_index":49,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/Pet.html":{},"classes/PetsResolver.html":{},"classes/UpdatePetInputDto.html":{},"overview.html":{}}}],["cluster_appconfigmodule",{"_index":4,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_appconfigmodule_exports",{"_index":5,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_mainmodule",{"_index":199,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_imports",{"_index":200,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_petscoremodule",{"_index":348,"title":{},"body":{"modules/PetsCoreModule.html":{},"overview.html":{}}}],["cluster_petscoremodule_providers",{"_index":349,"title":{},"body":{"modules/PetsCoreModule.html":{},"overview.html":{}}}],["cluster_petsresolvermodule",{"_index":396,"title":{},"body":{"modules/PetsResolverModule.html":{},"overview.html":{}}}],["cluster_petsresolvermodule_imports",{"_index":397,"title":{},"body":{"modules/PetsResolverModule.html":{},"overview.html":{}}}],["cluster_petsservicemodule",{"_index":429,"title":{},"body":{"modules/PetsServiceModule.html":{},"overview.html":{}}}],["cluster_petsservicemodule_exports",{"_index":430,"title":{},"body":{"modules/PetsServiceModule.html":{},"overview.html":{}}}],["cluster_petsservicemodule_imports",{"_index":432,"title":{},"body":{"modules/PetsServiceModule.html":{}}}],["cluster_petsservicemodule_providers",{"_index":431,"title":{},"body":{"modules/PetsServiceModule.html":{},"overview.html":{}}}],["code",{"_index":105,"title":{},"body":{"interfaces/GqlResponse.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"injectables/PetsService.html":{},"interfaces/Response.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["codes",{"_index":152,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["codes.ts",{"_index":500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["colorize",{"_index":448,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["column",{"_index":245,"title":{},"body":{"classes/Pet.html":{}}}],["combination",{"_index":760,"title":{},"body":{"license.html":{}}}],["comment",{"_index":938,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":900,"title":{},"body":{"license.html":{}}}],["common",{"_index":20,"title":{},"body":{"modules/AppConfigModule.html":{},"license.html":{}}}],["common.config",{"_index":21,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["common/resolver/pets/pets.resolver.module",{"_index":213,"title":{},"body":{"modules/MainModule.html":{}}}],["commonconfig",{"_index":217,"title":{},"body":{"modules/MainModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{}}}],["commonconfig.env",{"_index":224,"title":{},"body":{"modules/MainModule.html":{},"modules/PinoLoggerModule.html":{}}}],["communication",{"_index":702,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":657,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":949,"title":{},"body":{"license.html":{}}}],["complies",{"_index":823,"title":{},"body":{"license.html":{}}}],["compression",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":897,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":592,"title":{},"body":{"license.html":{}}}],["config",{"_index":442,"title":{},"body":{"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{}}}],["config.get('common",{"_index":443,"title":{},"body":{"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{}}}],["config.get('db",{"_index":459,"title":{},"body":{"modules/PostgresModule.html":{}}}],["configmodule",{"_index":18,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["configmodule.forroot",{"_index":37,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["configs/configuration.module",{"_index":212,"title":{},"body":{"modules/MainModule.html":{}}}],["configservice",{"_index":6,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/MainModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"overview.html":{}}}],["configservice.get('common",{"_index":218,"title":{},"body":{"modules/MainModule.html":{}}}],["configuration",{"_index":650,"title":{},"body":{"license.html":{}}}],["connection",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consequential",{"_index":890,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":914,"title":{},"body":{"license.html":{}}}],["console",{"_index":166,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["console.info('exception",{"_index":167,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["conspicuously",{"_index":715,"title":{},"body":{"license.html":{}}}],["const",{"_index":154,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"modules/MainModule.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{}}}],["constants/enums",{"_index":70,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"injectables/PetsCore.html":{},"classes/UpdatePetInputDto.html":{}}}],["constants/error",{"_index":151,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["constitutes",{"_index":768,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":113,"title":{},"body":{"classes/GqlResponseDto.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["constructor(partial",{"_index":114,"title":{},"body":{"classes/GqlResponseDto.html":{}}}],["constructor(petmodel",{"_index":285,"title":{},"body":{"injectables/PetsCore.html":{}}}],["constructor(petscore",{"_index":405,"title":{},"body":{"injectables/PetsService.html":{}}}],["constructor(petsservice",{"_index":359,"title":{},"body":{"classes/PetsResolver.html":{}}}],["constructor(private",{"_index":382,"title":{},"body":{"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["construed",{"_index":818,"title":{},"body":{"license.html":{}}}],["contained",{"_index":801,"title":{},"body":{"license.html":{}}}],["content",{"_index":851,"title":{},"body":{"license.html":{}}}],["contents",{"_index":811,"title":{},"body":{"license.html":{}}}],["context",{"_index":157,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["context.getresponse",{"_index":159,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["contract",{"_index":627,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":692,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":758,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":825,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":719,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":769,"title":{},"body":{"license.html":{}}}],["control",{"_index":613,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":614,"title":{},"body":{"license.html":{}}}],["controllers",{"_index":230,"title":{},"body":{"modules/MainModule.html":{}}}],["conventional",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["conversions",{"_index":659,"title":{},"body":{"license.html":{}}}],["cookie",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":776,"title":{},"body":{"license.html":{}}}],["copy",{"_index":783,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":604,"title":{},"body":{"license.html":{}}}],["core/pets/pets.core",{"_index":417,"title":{},"body":{"injectables/PetsService.html":{},"modules/PetsServiceModule.html":{}}}],["core/pets/pets.core.module",{"_index":435,"title":{},"body":{"modules/PetsServiceModule.html":{}}}],["cors",{"_index":226,"title":{},"body":{"modules/MainModule.html":{}}}],["count",{"_index":86,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{}}}],["counterclaim",{"_index":765,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":484,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":282,"title":{},"body":{"injectables/PetsCore.html":{},"injectables/PetsService.html":{}}}],["create(createpetinput",{"_index":407,"title":{},"body":{"injectables/PetsService.html":{}}}],["create(data",{"_index":288,"title":{},"body":{"injectables/PetsCore.html":{}}}],["created_at",{"_index":193,"title":{},"body":{"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"classes/Pet.html":{},"miscellaneous/enumerations.html":{}}}],["createdat",{"_index":259,"title":{},"body":{"classes/Pet.html":{}}}],["createpagination",{"_index":303,"title":{},"body":{"injectables/PetsCore.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createpagination(filterdata.page",{"_index":330,"title":{},"body":{"injectables/PetsCore.html":{}}}],["createpet",{"_index":356,"title":{},"body":{"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["createpet(@args('input",{"_index":387,"title":{},"body":{"classes/PetsResolver.html":{}}}],["createpet(createpetinput",{"_index":362,"title":{},"body":{"classes/PetsResolver.html":{}}}],["createpetinput",{"_index":365,"title":{},"body":{"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["createpetinput.name",{"_index":419,"title":{},"body":{"injectables/PetsService.html":{}}}],["createpetinputdto",{"_index":48,"title":{"classes/CreatePetInputDto.html":{}},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"classes/UpdatePetInputDto.html":{},"coverage.html":{}}}],["cross",{"_index":530,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["crypto",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["csrfprevention",{"_index":227,"title":{},"body":{"modules/MainModule.html":{}}}],["customary",{"_index":847,"title":{},"body":{"license.html":{}}}],["cz",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["d",{"_index":797,"title":{},"body":{"license.html":{}}}],["damages",{"_index":887,"title":{},"body":{"license.html":{}}}],["data",{"_index":292,"title":{},"body":{"injectables/PetsCore.html":{}}}],["data.id",{"_index":343,"title":{},"body":{"injectables/PetsCore.html":{}}}],["data.name",{"_index":313,"title":{},"body":{"injectables/PetsCore.html":{}}}],["data.search",{"_index":340,"title":{},"body":{"injectables/PetsCore.html":{}}}],["data?.id",{"_index":342,"title":{},"body":{"injectables/PetsCore.html":{}}}],["data?.name",{"_index":344,"title":{},"body":{"injectables/PetsCore.html":{}}}],["data?.order_by",{"_index":322,"title":{},"body":{"injectables/PetsCore.html":{}}}],["data?.order_type",{"_index":324,"title":{},"body":{"injectables/PetsCore.html":{}}}],["data?.page",{"_index":318,"title":{},"body":{"injectables/PetsCore.html":{}}}],["data?.pagination",{"_index":316,"title":{},"body":{"injectables/PetsCore.html":{}}}],["data?.row",{"_index":320,"title":{},"body":{"injectables/PetsCore.html":{}}}],["data?.search",{"_index":337,"title":{},"body":{"injectables/PetsCore.html":{}}}],["database",{"_index":471,"title":{},"body":{"modules/PostgresModule.html":{},"miscellaneous/variables.html":{}}}],["datatype",{"_index":246,"title":{},"body":{"classes/Pet.html":{}}}],["datatype.bigint",{"_index":261,"title":{},"body":{"classes/Pet.html":{}}}],["datatype.date",{"_index":263,"title":{},"body":{"classes/Pet.html":{}}}],["datatype.string",{"_index":262,"title":{},"body":{"classes/Pet.html":{}}}],["date",{"_index":773,"title":{},"body":{"license.html":{}}}],["db",{"_index":22,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["db.config",{"_index":23,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["dbconfig",{"_index":458,"title":{},"body":{"modules/PostgresModule.html":{}}}],["dbconfig.pg_db.db",{"_index":472,"title":{},"body":{"modules/PostgresModule.html":{}}}],["dbconfig.pg_db.dialect",{"_index":463,"title":{},"body":{"modules/PostgresModule.html":{}}}],["dbconfig.pg_db.host",{"_index":464,"title":{},"body":{"modules/PostgresModule.html":{}}}],["dbconfig.pg_db.password",{"_index":470,"title":{},"body":{"modules/PostgresModule.html":{}}}],["dbconfig.pg_db.port",{"_index":466,"title":{},"body":{"modules/PostgresModule.html":{}}}],["dbconfig.pg_db.test_db",{"_index":474,"title":{},"body":{"modules/PostgresModule.html":{}}}],["dbconfig.pg_db.username",{"_index":468,"title":{},"body":{"modules/PostgresModule.html":{}}}],["dbobject",{"_index":460,"title":{},"body":{"modules/PostgresModule.html":{}}}],["dbobject[commonconfig.env",{"_index":475,"title":{},"body":{"modules/PostgresModule.html":{}}}],["debug",{"_index":222,"title":{},"body":{"modules/MainModule.html":{}}}],["decorators",{"_index":56,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/Pet.html":{},"classes/PetsResolver.html":{},"classes/UpdatePetInputDto.html":{}}}],["default",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default('api",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default('development",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default('password",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default('postgres",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default(false",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defend",{"_index":920,"title":{},"body":{"license.html":{}}}],["defined",{"_index":58,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"classes/UpdatePetInputDto.html":{},"license.html":{}}}],["definition",{"_index":617,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":596,"title":{},"body":{"license.html":{}}}],["delete",{"_index":395,"title":{},"body":{"classes/PetsResolver.html":{}}}],["deleted_at",{"_index":194,"title":{},"body":{"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"classes/Pet.html":{},"miscellaneous/enumerations.html":{}}}],["deletedat",{"_index":258,"title":{},"body":{"classes/Pet.html":{}}}],["deliberate",{"_index":882,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/MainModule.html":{},"modules/PetsCoreModule.html":{},"modules/PetsResolverModule.html":{},"modules/PetsServiceModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derivative",{"_index":674,"title":{},"body":{"license.html":{}}}],["derived",{"_index":677,"title":{},"body":{"license.html":{}}}],["desc",{"_index":578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["describing",{"_index":848,"title":{},"body":{"license.html":{}}}],["description",{"_index":941,"title":{},"body":{"license.html":{},"properties.html":{}}}],["description('enable",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description('jwt",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description('postgres",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["designated",{"_index":717,"title":{},"body":{"license.html":{}}}],["determining",{"_index":869,"title":{},"body":{"license.html":{}}}],["development",{"_index":461,"title":{},"body":{"modules/PostgresModule.html":{}}}],["dialect",{"_index":462,"title":{},"body":{"modules/PostgresModule.html":{}}}],["different",{"_index":822,"title":{},"body":{"license.html":{}}}],["direct",{"_index":620,"title":{},"body":{"license.html":{}}}],["direction",{"_index":623,"title":{},"body":{"license.html":{}}}],["disable",{"_index":163,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["disclaimer",{"_index":852,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":712,"title":{},"body":{"license.html":{}}}],["display",{"_index":740,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":743,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":804,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":595,"title":{},"body":{"license.html":{}}}],["document",{"_index":602,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":485,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["don't",{"_index":936,"title":{},"body":{"license.html":{}}}],["dotenv",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["driver",{"_index":215,"title":{},"body":{"modules/MainModule.html":{}}}],["dto/index.dto",{"_index":305,"title":{},"body":{"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["each",{"_index":726,"title":{},"body":{"license.html":{}}}],["easier",{"_index":944,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":678,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":681,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":699,"title":{},"body":{"license.html":{}}}],["enclosed",{"_index":931,"title":{},"body":{"license.html":{}}}],["end",{"_index":926,"title":{},"body":{"license.html":{}}}],["entities",{"_index":612,"title":{},"body":{"license.html":{}}}],["entity",{"_index":606,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":564,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["env/.env.${process.env.node_env",{"_index":41,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["envfilepath",{"_index":40,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["error",{"_index":168,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponseprefix",{"_index":565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorresponseprefix.badrequesterror",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorresponseprefix.forbiddenerror",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorresponseprefix.internalservererror",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorresponseprefix.unauthorizederror",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorresponseprefix.unavailableserviceerror",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorresponseprefix.validationerror",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint",{"_index":162,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["even",{"_index":902,"title":{},"body":{"license.html":{}}}],["event",{"_index":878,"title":{},"body":{"license.html":{}}}],["example",{"_index":670,"title":{},"body":{"license.html":{}}}],["except",{"_index":745,"title":{},"body":{"license.html":{}}}],["exception",{"_index":134,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":123,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:26",{"_index":133,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":172,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":175,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["excluding",{"_index":714,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":732,"title":{},"body":{"license.html":{}}}],["executed",{"_index":836,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":876,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":640,"title":{},"body":{"license.html":{}}}],["exist",{"_index":423,"title":{},"body":{"injectables/PetsService.html":{}}}],["explicitly",{"_index":827,"title":{},"body":{"license.html":{}}}],["export",{"_index":44,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"modules/MainModule.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"classes/PetsResolver.html":{},"modules/PetsResolverModule.html":{},"injectables/PetsService.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{}}}],["exports",{"_index":15,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/PetsCoreModule.html":{},"modules/PetsResolverModule.html":{},"modules/PetsServiceModule.html":{}}}],["express",{"_index":512,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":74,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/Pet.html":{},"classes/UpdatePetInputDto.html":{}}}],["failure",{"_index":898,"title":{},"body":{"license.html":{}}}],["false",{"_index":85,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/Pet.html":{},"modules/PostgresModule.html":{},"classes/UpdatePetInputDto.html":{},"miscellaneous/enumerations.html":{}}}],["fee",{"_index":907,"title":{},"body":{"license.html":{}}}],["field",{"_index":61,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/Pet.html":{},"classes/UpdatePetInputDto.html":{}}}],["field(undefined",{"_index":57,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/Pet.html":{},"classes/UpdatePetInputDto.html":{}}}],["field(undefined)@autoincrement()@primarykey()@column({type",{"_index":238,"title":{},"body":{"classes/Pet.html":{}}}],["field(undefined)@column({type",{"_index":241,"title":{},"body":{"classes/Pet.html":{}}}],["fields",{"_index":930,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":631,"title":{},"body":{"license.html":{}}}],["file",{"_index":13,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"modules/MainModule.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"classes/PetsResolver.html":{},"modules/PetsResolverModule.html":{},"injectables/PetsService.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":774,"title":{},"body":{"license.html":{}}}],["filename",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":651,"title":{},"body":{"license.html":{}}}],["filter",{"_index":169,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/PetsCore.html":{}}}],["filterdata",{"_index":315,"title":{},"body":{"injectables/PetsCore.html":{}}}],["filterdata.order_by",{"_index":327,"title":{},"body":{"injectables/PetsCore.html":{}}}],["filterdata.order_type",{"_index":328,"title":{},"body":{"injectables/PetsCore.html":{}}}],["filterdata.row",{"_index":331,"title":{},"body":{"injectables/PetsCore.html":{}}}],["filterpetdto",{"_index":77,"title":{"classes/FilterPetDto.html":{}},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"classes/UpdatePetInputDto.html":{},"coverage.html":{}}}],["findandcountall",{"_index":283,"title":{},"body":{"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["findandcountall(@args",{"_index":385,"title":{},"body":{"classes/PetsResolver.html":{}}}],["findandcountall(data",{"_index":293,"title":{},"body":{"injectables/PetsCore.html":{}}}],["findandcountall(query",{"_index":366,"title":{},"body":{"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["findandcountallpetresponsedto",{"_index":84,"title":{"classes/FindAndCountAllPetResponseDto.html":{}},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"classes/UpdatePetInputDto.html":{},"coverage.html":{}}}],["findandcountoptions",{"_index":294,"title":{},"body":{"injectables/PetsCore.html":{},"injectables/PetsService.html":{}}}],["findone",{"_index":284,"title":{},"body":{"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["findone(@args('id",{"_index":383,"title":{},"body":{"classes/PetsResolver.html":{}}}],["findone(data",{"_index":296,"title":{},"body":{"injectables/PetsCore.html":{}}}],["findone(id",{"_index":371,"title":{},"body":{"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["findonefilterpetdto",{"_index":88,"title":{"classes/FindOneFilterPetDto.html":{}},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"injectables/PetsCore.html":{},"classes/UpdatePetInputDto.html":{},"coverage.html":{}}}],["findoptions",{"_index":297,"title":{},"body":{"injectables/PetsCore.html":{},"injectables/PetsService.html":{}}}],["fitness",{"_index":865,"title":{},"body":{"license.html":{}}}],["fluentd",{"_index":24,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["fluentd.config",{"_index":25,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["following",{"_index":780,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidden_error",{"_index":145,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forbidden_error.code",{"_index":183,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["forbidden_error.message",{"_index":184,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["forbiddenerror",{"_index":574,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forbiddenexception",{"_index":138,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["form",{"_index":643,"title":{},"body":{"license.html":{}}}],["format",{"_index":267,"title":{},"body":{"classes/Pet.html":{},"license.html":{}}}],["found",{"_index":426,"title":{},"body":{"injectables/PetsService.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":735,"title":{},"body":{"license.html":{}}}],["freezetablename",{"_index":255,"title":{},"body":{"classes/Pet.html":{}}}],["function",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":579,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":658,"title":{},"body":{"license.html":{}}}],["getting",{"_index":581,"title":{"index.html":{},"license.html":{}},"body":{}}],["give",{"_index":781,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":895,"title":{},"body":{"license.html":{}}}],["governing",{"_index":955,"title":{},"body":{"license.html":{}}}],["gqlargumentshost",{"_index":143,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["gqlargumentshost.create(host",{"_index":156,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["gqlexceptionfilter",{"_index":125,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["gqlhost",{"_index":155,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["gqlhost.switchtohttp",{"_index":158,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["gqlresponse",{"_index":102,"title":{"interfaces/GqlResponse.html":{}},"body":{"interfaces/GqlResponse.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/Response.html":{},"coverage.html":{}}}],["gqlresponsedto",{"_index":111,"title":{"classes/GqlResponseDto.html":{}},"body":{"classes/GqlResponseDto.html":{},"coverage.html":{}}}],["grant",{"_index":724,"title":{},"body":{"license.html":{}}}],["granted",{"_index":642,"title":{},"body":{"license.html":{}}}],["granting",{"_index":608,"title":{},"body":{"license.html":{}}}],["grants",{"_index":728,"title":{},"body":{"license.html":{}}}],["graph",{"_index":960,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":542,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graphqlmodule",{"_index":205,"title":{},"body":{"modules/MainModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":214,"title":{},"body":{"modules/MainModule.html":{}}}],["grossly",{"_index":883,"title":{},"body":{"license.html":{}}}],["h:mm:ss",{"_index":452,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["harmless",{"_index":922,"title":{},"body":{"license.html":{}}}],["helmet",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["helpers/index.helper",{"_index":304,"title":{},"body":{"injectables/PetsCore.html":{}}}],["hereby",{"_index":727,"title":{},"body":{"license.html":{}}}],["herein",{"_index":832,"title":{},"body":{"license.html":{}}}],["hold",{"_index":921,"title":{},"body":{"license.html":{}}}],["host",{"_index":131,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"modules/PostgresModule.html":{}}}],["http://www.apache.org/licenses",{"_index":590,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":951,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":130,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":121,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["id",{"_index":89,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"classes/UpdatePetInputDto.html":{},"miscellaneous/enumerations.html":{}}}],["identification",{"_index":945,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":934,"title":{},"body":{"license.html":{}}}],["ifindandcountall",{"_index":110,"title":{"interfaces/IFindAndCountAll.html":{}},"body":{"interfaces/GqlResponse.html":{},"interfaces/IFindAndCountAll.html":{},"injectables/PetsCore.html":{},"interfaces/Response.html":{},"coverage.html":{}}}],["ii",{"_index":629,"title":{},"body":{"license.html":{}}}],["iii",{"_index":637,"title":{},"body":{"license.html":{}}}],["implements",{"_index":124,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["implied",{"_index":861,"title":{},"body":{"license.html":{}}}],["import",{"_index":16,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/HttpExceptionFilter.html":{},"modules/MainModule.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"classes/PetsResolver.html":{},"modules/PetsResolverModule.html":{},"injectables/PetsService.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"classes/UpdatePetInputDto.html":{},"license.html":{}}}],["imports",{"_index":36,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/MainModule.html":{},"modules/PetsCoreModule.html":{},"modules/PetsResolverModule.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{}}}],["improving",{"_index":713,"title":{},"body":{"license.html":{}}}],["inability",{"_index":893,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":889,"title":{},"body":{"license.html":{}}}],["include",{"_index":685,"title":{},"body":{"license.html":{}}}],["included",{"_index":668,"title":{},"body":{"license.html":{}}}],["includes",{"_index":798,"title":{},"body":{"license.html":{}}}],["including",{"_index":647,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":696,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":722,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":923,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":919,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":910,"title":{},"body":{"license.html":{}}}],["index",{"_index":51,"title":{"index.html":{}},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":666,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":621,"title":{},"body":{"license.html":{}}}],["individual",{"_index":639,"title":{},"body":{"license.html":{}}}],["info",{"_index":11,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"modules/MainModule.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"classes/PetsResolver.html":{},"modules/PetsResolverModule.html":{},"injectables/PetsService.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{}}}],["information",{"_index":935,"title":{},"body":{"license.html":{}}}],["informational",{"_index":812,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":757,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":770,"title":{},"body":{"license.html":{}}}],["inject",{"_index":229,"title":{},"body":{"modules/MainModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{}}}],["injectable",{"_index":278,"title":{"injectables/PetsCore.html":{},"injectables/PetsService.html":{}},"body":{"injectables/PetsCore.html":{},"injectables/PetsService.html":{},"coverage.html":{}}}],["injectables",{"_index":280,"title":{},"body":{"injectables/PetsCore.html":{},"injectables/PetsService.html":{},"overview.html":{}}}],["injectmodel",{"_index":299,"title":{},"body":{"injectables/PetsCore.html":{}}}],["injectmodel(pet",{"_index":306,"title":{},"body":{"injectables/PetsCore.html":{}}}],["inputtype",{"_index":62,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/UpdatePetInputDto.html":{}}}],["instancedestroyoptions",{"_index":412,"title":{},"body":{"injectables/PetsService.html":{}}}],["instanceof",{"_index":170,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["instanceupdateoptions",{"_index":415,"title":{},"body":{"injectables/PetsService.html":{}}}],["institute",{"_index":761,"title":{},"body":{"license.html":{}}}],["int",{"_index":63,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/Pet.html":{},"classes/PetsResolver.html":{},"classes/UpdatePetInputDto.html":{}}}],["intentionally",{"_index":694,"title":{},"body":{"license.html":{}}}],["interface",{"_index":101,"title":{"interfaces/GqlResponse.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"interfaces/Response.html":{}},"body":{"interfaces/GqlResponse.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"interfaces/Response.html":{},"coverage.html":{}}}],["interfaces",{"_index":103,"title":{},"body":{"interfaces/GqlResponse.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"interfaces/Response.html":{},"license.html":{},"overview.html":{}}}],["interfaces/index.interface",{"_index":153,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/PetsCore.html":{}}}],["internalservererror",{"_index":572,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ioptionalpet",{"_index":191,"title":{"interfaces/IOptionalPet.html":{}},"body":{"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"coverage.html":{}}}],["ipet",{"_index":196,"title":{"interfaces/IPet.html":{}},"body":{"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"injectables/PetsCore.html":{},"coverage.html":{}}}],["irrevocable",{"_index":736,"title":{},"body":{"license.html":{}}}],["isglobal",{"_index":38,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["issue",{"_index":708,"title":{},"body":{"license.html":{}}}],["itself",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["january",{"_index":588,"title":{},"body":{"license.html":{}}}],["joi",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["joi.bool",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(4000",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(5432",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('1').description('api",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('localhost",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().description('ssl",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":206,"title":{},"body":{"modules/MainModule.html":{}}}],["js",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["jwt_secret",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":860,"title":{},"body":{"license.html":{}}}],["language",{"_index":954,"title":{},"body":{"license.html":{}}}],["law",{"_index":855,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":766,"title":{},"body":{"license.html":{}}}],["legal",{"_index":609,"title":{},"body":{"license.html":{}}}],["levelfirst",{"_index":449,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["liability",{"_index":877,"title":{},"body":{"license.html":{}}}],["liable",{"_index":886,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":755,"title":{},"body":{"license.html":{}}}],["license",{"_index":584,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":948,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":771,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":603,"title":{},"body":{"license.html":{}}}],["limit",{"_index":333,"title":{},"body":{"injectables/PetsCore.html":{}}}],["limitation",{"_index":862,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":956,"title":{},"body":{"license.html":{}}}],["limited",{"_index":648,"title":{},"body":{"license.html":{}}}],["line",{"_index":165,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["link",{"_index":689,"title":{},"body":{"license.html":{}}}],["lists",{"_index":706,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":762,"title":{},"body":{"license.html":{}}}],["load",{"_index":42,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["logger.module.ts",{"_index":437,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["loggermodule",{"_index":438,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["loggermodule.forrootasync",{"_index":441,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["logging",{"_index":478,"title":{},"body":{"modules/PostgresModule.html":{}}}],["loss",{"_index":894,"title":{},"body":{"license.html":{}}}],["losses",{"_index":901,"title":{},"body":{"license.html":{}}}],["made",{"_index":664,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":705,"title":{},"body":{"license.html":{}}}],["mainmodule",{"_index":198,"title":{"modules/MainModule.html":{}},"body":{"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["make",{"_index":748,"title":{},"body":{"license.html":{}}}],["making",{"_index":645,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":899,"title":{},"body":{"license.html":{}}}],["managed",{"_index":710,"title":{},"body":{"license.html":{}}}],["management",{"_index":624,"title":{},"body":{"license.html":{}}}],["marked",{"_index":716,"title":{},"body":{"license.html":{}}}],["marks",{"_index":843,"title":{},"body":{"license.html":{}}}],["matching",{"_index":47,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"modules/MainModule.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"classes/PetsResolver.html":{},"modules/PetsResolverModule.html":{},"injectables/PetsService.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":480,"title":{},"body":{"modules/PostgresModule.html":{}}}],["mean",{"_index":598,"title":{},"body":{"license.html":{}}}],["means",{"_index":618,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":654,"title":{},"body":{"license.html":{}}}],["media",{"_index":660,"title":{},"body":{"license.html":{}}}],["medium",{"_index":777,"title":{},"body":{"license.html":{}}}],["meet",{"_index":779,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":864,"title":{},"body":{"license.html":{}}}],["merely",{"_index":688,"title":{},"body":{"license.html":{}}}],["message",{"_index":106,"title":{},"body":{"interfaces/GqlResponse.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"injectables/PetsService.html":{},"interfaces/Response.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":126,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["minio",{"_index":26,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["minio.config",{"_index":27,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["miscellaneous",{"_index":563,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":232,"title":{},"body":{"classes/Pet.html":{}}}],["models",{"_index":481,"title":{},"body":{"modules/PostgresModule.html":{}}}],["models/index.model",{"_index":456,"title":{},"body":{"modules/PostgresModule.html":{}}}],["modifications",{"_index":646,"title":{},"body":{"license.html":{}}}],["modified",{"_index":785,"title":{},"body":{"license.html":{}}}],["modify",{"_index":813,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":819,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppConfigModule.html":{},"modules/MainModule.html":{},"modules/PetsCoreModule.html":{},"modules/PetsResolverModule.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/MainModule.html":{},"modules/PetsCoreModule.html":{},"modules/PetsResolverModule.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/MainModule.html":{},"modules/PetsCoreModule.html":{},"modules/PetsResolverModule.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":251,"title":{},"body":{"classes/Pet.html":{},"dependencies.html":{}}}],["moment(this.getdatavalue('created_at",{"_index":265,"title":{},"body":{"classes/Pet.html":{}}}],["moment(this.getdatavalue('deleted_at",{"_index":277,"title":{},"body":{"classes/Pet.html":{}}}],["moment(this.getdatavalue('updated_at",{"_index":275,"title":{},"body":{"classes/Pet.html":{}}}],["moment.tz(value",{"_index":272,"title":{},"body":{"classes/Pet.html":{}}}],["more",{"_index":634,"title":{},"body":{"license.html":{}}}],["morgan",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["mutation",{"_index":379,"title":{},"body":{"classes/PetsResolver.html":{}}}],["mutation(undefined",{"_index":363,"title":{},"body":{"classes/PetsResolver.html":{}}}],["name",{"_index":53,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"classes/UpdatePetInputDto.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":841,"title":{},"body":{"license.html":{}}}],["necessarily",{"_index":756,"title":{},"body":{"license.html":{}}}],["negligence",{"_index":881,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":884,"title":{},"body":{"license.html":{}}}],["nest",{"_index":583,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":439,"title":{},"body":{"modules/PinoLoggerModule.html":{},"dependencies.html":{}}}],["nestjs/apollo",{"_index":210,"title":{},"body":{"modules/MainModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/HttpExceptionFilter.html":{},"modules/MainModule.html":{},"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"modules/PetsResolverModule.html":{},"injectables/PetsService.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":19,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/MainModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":66,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/HttpExceptionFilter.html":{},"modules/MainModule.html":{},"classes/Pet.html":{},"classes/PetsResolver.html":{},"classes/UpdatePetInputDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["nestjs/sequelize",{"_index":300,"title":{},"body":{"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"modules/PostgresModule.html":{},"dependencies.html":{}}}],["new",{"_index":311,"title":{},"body":{"injectables/PetsCore.html":{},"injectables/PetsService.html":{},"coverage.html":{}}}],["next",{"_index":164,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["node_env",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":731,"title":{},"body":{"license.html":{}}}],["normally",{"_index":809,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":150,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/PetsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["not_found_error.code",{"_index":185,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["not_found_error.message",{"_index":186,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["notfounderror",{"_index":569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":139,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/PetsService.html":{}}}],["nothing",{"_index":831,"title":{},"body":{"license.html":{}}}],["notice",{"_index":667,"title":{},"body":{"license.html":{}}}],["notices",{"_index":788,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":829,"title":{},"body":{"license.html":{}}}],["null",{"_index":268,"title":{},"body":{"classes/Pet.html":{},"injectables/PetsCore.html":{}}}],["nullable",{"_index":76,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/Pet.html":{},"classes/UpdatePetInputDto.html":{}}}],["number",{"_index":79,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"interfaces/IFindAndCountAll.html":{},"classes/Pet.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{}}}],["object",{"_index":652,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["object.assign(filter",{"_index":332,"title":{},"body":{"injectables/PetsCore.html":{}}}],["object.assign(filter.where",{"_index":338,"title":{},"body":{"injectables/PetsCore.html":{}}}],["object.assign(this",{"_index":120,"title":{},"body":{"classes/GqlResponseDto.html":{}}}],["objecttype",{"_index":64,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/Pet.html":{},"classes/UpdatePetInputDto.html":{}}}],["obligations",{"_index":911,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":950,"title":{},"body":{"license.html":{}}}],["offer",{"_index":749,"title":{},"body":{"license.html":{}}}],["offset",{"_index":335,"title":{},"body":{"injectables/PetsCore.html":{}}}],["one",{"_index":802,"title":{},"body":{"license.html":{}}}],["op",{"_index":301,"title":{},"body":{"injectables/PetsCore.html":{}}}],["op.ilike",{"_index":339,"title":{},"body":{"injectables/PetsCore.html":{}}}],["optional",{"_index":90,"title":{},"body":{"classes/FilterPetDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{}}}],["options",{"_index":289,"title":{},"body":{"injectables/PetsCore.html":{},"injectables/PetsService.html":{},"modules/PinoLoggerModule.html":{}}}],["order",{"_index":326,"title":{},"body":{"injectables/PetsCore.html":{}}}],["order_by",{"_index":81,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"injectables/PetsCore.html":{},"classes/UpdatePetInputDto.html":{}}}],["order_type",{"_index":82,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"injectables/PetsCore.html":{},"classes/UpdatePetInputDto.html":{}}}],["ordertype",{"_index":67,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"injectables/PetsCore.html":{},"classes/UpdatePetInputDto.html":{},"miscellaneous/enumerations.html":{}}}],["ordertype.asc",{"_index":325,"title":{},"body":{"injectables/PetsCore.html":{}}}],["origin",{"_index":849,"title":{},"body":{"license.html":{}}}],["original",{"_index":684,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":628,"title":{},"body":{"license.html":{}}}],["out",{"_index":10,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/MainModule.html":{},"modules/PetsCoreModule.html":{},"modules/PetsResolverModule.html":{},"modules/PetsServiceModule.html":{},"license.html":{},"overview.html":{}}}],["outstanding",{"_index":635,"title":{},"body":{"license.html":{}}}],["overview",{"_index":961,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":605,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":630,"title":{},"body":{"license.html":{}}}],["package",{"_index":506,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":78,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"injectables/PetsCore.html":{},"classes/UpdatePetInputDto.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["pager",{"_index":329,"title":{},"body":{"injectables/PetsCore.html":{}}}],["pager.page",{"_index":336,"title":{},"body":{"injectables/PetsCore.html":{}}}],["pager.row",{"_index":334,"title":{},"body":{"injectables/PetsCore.html":{}}}],["pagination",{"_index":68,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"injectables/PetsCore.html":{},"classes/UpdatePetInputDto.html":{},"miscellaneous/enumerations.html":{}}}],["pagination.yes",{"_index":317,"title":{},"body":{"injectables/PetsCore.html":{}}}],["parameters",{"_index":117,"title":{},"body":{"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["paranoid",{"_index":253,"title":{},"body":{"classes/Pet.html":{}}}],["parser",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":796,"title":{},"body":{"license.html":{}}}],["partial",{"_index":115,"title":{},"body":{"classes/GqlResponseDto.html":{}}}],["partialtype",{"_index":65,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/UpdatePetInputDto.html":{}}}],["partialtype(createpetinputdto",{"_index":75,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/UpdatePetInputDto.html":{}}}],["particular",{"_index":866,"title":{},"body":{"license.html":{}}}],["party",{"_index":808,"title":{},"body":{"license.html":{}}}],["password",{"_index":469,"title":{},"body":{"modules/PostgresModule.html":{},"miscellaneous/variables.html":{}}}],["patent",{"_index":744,"title":{},"body":{"license.html":{}}}],["path",{"_index":207,"title":{},"body":{"modules/MainModule.html":{}}}],["percent",{"_index":632,"title":{},"body":{"license.html":{}}}],["perform",{"_index":741,"title":{},"body":{"license.html":{}}}],["permission",{"_index":839,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":641,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":729,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":795,"title":{},"body":{"license.html":{}}}],["pet",{"_index":71,"title":{"classes/Pet.html":{}},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"modules/PostgresModule.html":{},"classes/UpdatePetInputDto.html":{},"coverage.html":{}}}],["pet.destroy",{"_index":428,"title":{},"body":{"injectables/PetsService.html":{}}}],["pet.update(updatepetinput",{"_index":427,"title":{},"body":{"injectables/PetsService.html":{}}}],["petmodel",{"_index":287,"title":{},"body":{"injectables/PetsCore.html":{}}}],["petorderby",{"_index":69,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"injectables/PetsCore.html":{},"classes/UpdatePetInputDto.html":{},"miscellaneous/enumerations.html":{}}}],["petorderby.id",{"_index":323,"title":{},"body":{"injectables/PetsCore.html":{}}}],["pets",{"_index":257,"title":{},"body":{"classes/Pet.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["pets.core",{"_index":352,"title":{},"body":{"modules/PetsCoreModule.html":{}}}],["pets.resolver",{"_index":401,"title":{},"body":{"modules/PetsResolverModule.html":{}}}],["pets.service",{"_index":434,"title":{},"body":{"modules/PetsServiceModule.html":{}}}],["petscore",{"_index":279,"title":{"injectables/PetsCore.html":{}},"body":{"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"injectables/PetsService.html":{},"modules/PetsServiceModule.html":{},"coverage.html":{},"overview.html":{}}}],["petscoremodule",{"_index":347,"title":{"modules/PetsCoreModule.html":{}},"body":{"modules/PetsCoreModule.html":{},"modules/PetsServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["petsresolver",{"_index":354,"title":{"classes/PetsResolver.html":{}},"body":{"classes/PetsResolver.html":{},"modules/PetsResolverModule.html":{},"coverage.html":{}}}],["petsresolvermodule",{"_index":201,"title":{"modules/PetsResolverModule.html":{}},"body":{"modules/MainModule.html":{},"modules/PetsResolverModule.html":{},"modules.html":{},"overview.html":{}}}],["petsservice",{"_index":360,"title":{"injectables/PetsService.html":{}},"body":{"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"modules/PetsServiceModule.html":{},"coverage.html":{},"overview.html":{}}}],["petsservicemodule",{"_index":398,"title":{"modules/PetsServiceModule.html":{}},"body":{"modules/PetsResolverModule.html":{},"modules/PetsServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["pg",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["pino",{"_index":440,"title":{},"body":{"modules/PinoLoggerModule.html":{},"dependencies.html":{}}}],["pinohttp",{"_index":444,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["pinologgermodule",{"_index":202,"title":{"modules/PinoLoggerModule.html":{}},"body":{"modules/MainModule.html":{},"modules/PinoLoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["places",{"_index":803,"title":{},"body":{"license.html":{}}}],["playground",{"_index":223,"title":{},"body":{"modules/MainModule.html":{}}}],["pool",{"_index":479,"title":{},"body":{"modules/PostgresModule.html":{}}}],["port",{"_index":465,"title":{},"body":{"modules/PostgresModule.html":{},"miscellaneous/variables.html":{}}}],["possibility",{"_index":904,"title":{},"body":{"license.html":{}}}],["postgres_cert_ca",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_db",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_host",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_password",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_port",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_ssl",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_test_db",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_username",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgresmodule",{"_index":203,"title":{"modules/PostgresModule.html":{}},"body":{"modules/MainModule.html":{},"modules/PostgresModule.html":{},"modules.html":{},"overview.html":{}}}],["postgresql",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["power",{"_index":619,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":644,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":738,"title":{},"body":{"license.html":{}}}],["pretty",{"_index":447,"title":{},"body":{"modules/PinoLoggerModule.html":{},"dependencies.html":{}}}],["primarykey",{"_index":248,"title":{},"body":{"classes/Pet.html":{}}}],["printed",{"_index":943,"title":{},"body":{"license.html":{}}}],["private",{"_index":307,"title":{},"body":{"injectables/PetsCore.html":{}}}],["process.cwd",{"_index":220,"title":{},"body":{"modules/MainModule.html":{}}}],["process.env.node_env",{"_index":160,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["product",{"_index":844,"title":{},"body":{"license.html":{}}}],["production",{"_index":161,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"modules/MainModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":787,"title":{},"body":{"license.html":{}}}],["promise",{"_index":136,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/PetsCore.html":{},"injectables/PetsService.html":{}}}],["properties",{"_index":52,"title":{"properties.html":{}},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"classes/GqlResponseDto.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"classes/Pet.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{},"properties.html":{}}}],["provide",{"_index":821,"title":{},"body":{"license.html":{}}}],["provided",{"_index":671,"title":{},"body":{"license.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/MainModule.html":{},"modules/PetsCoreModule.html":{},"modules/PetsResolverModule.html":{},"modules/PetsServiceModule.html":{}}}],["providers/database/pg/models/index.model",{"_index":302,"title":{},"body":{"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["providers/database/pg/models/pets.model",{"_index":72,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/UpdatePetInputDto.html":{}}}],["providers/index.provider",{"_index":211,"title":{},"body":{"modules/MainModule.html":{}}}],["provides",{"_index":857,"title":{},"body":{"license.html":{}}}],["provision",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publicly",{"_index":739,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":711,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":616,"title":{},"body":{"license.html":{}}}],["query",{"_index":369,"title":{},"body":{"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["query(undefined",{"_index":367,"title":{},"body":{"classes/PetsResolver.html":{}}}],["queue",{"_index":30,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["queue.config",{"_index":31,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["readable",{"_index":800,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":308,"title":{},"body":{"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["reason",{"_index":925,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":846,"title":{},"body":{"license.html":{}}}],["received",{"_index":720,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":782,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":940,"title":{},"body":{"license.html":{}}}],["redistributing",{"_index":872,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":775,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["regarding",{"_index":837,"title":{},"body":{"license.html":{}}}],["remain",{"_index":686,"title":{},"body":{"license.html":{}}}],["remove",{"_index":403,"title":{},"body":{"injectables/PetsService.html":{}}}],["remove(id",{"_index":411,"title":{},"body":{"injectables/PetsService.html":{}}}],["removepet",{"_index":357,"title":{},"body":{"classes/PetsResolver.html":{}}}],["removepet(@args('id",{"_index":392,"title":{},"body":{"classes/PetsResolver.html":{}}}],["removepet(id",{"_index":373,"title":{},"body":{"classes/PetsResolver.html":{}}}],["replaced",{"_index":933,"title":{},"body":{"license.html":{}}}],["represent",{"_index":682,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":704,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":737,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":850,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":594,"title":{},"body":{"license.html":{}}}],["request",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":845,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":171,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.code",{"_index":176,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.message",{"_index":178,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.result",{"_index":180,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":9,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/MainModule.html":{},"modules/PetsCoreModule.html":{},"modules/PetsResolverModule.html":{},"modules/PetsServiceModule.html":{},"overview.html":{}}}],["resolver",{"_index":378,"title":{},"body":{"classes/PetsResolver.html":{}}}],["response",{"_index":107,"title":{"interfaces/Response.html":{}},"body":{"interfaces/GqlResponse.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/Response.html":{},"coverage.html":{}}}],["response.status(exception.getstatus()).json",{"_index":174,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["responsibility",{"_index":917,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":868,"title":{},"body":{"license.html":{}}}],["result",{"_index":109,"title":{},"body":{"interfaces/GqlResponse.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/Response.html":{},"license.html":{}}}],["resulting",{"_index":653,"title":{},"body":{"license.html":{}}}],["results",{"_index":46,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"modules/MainModule.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"classes/PetsResolver.html":{},"modules/PetsResolverModule.html":{},"injectables/PetsService.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":792,"title":{},"body":{"license.html":{}}}],["return",{"_index":173,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"modules/MainModule.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":135,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["revisions",{"_index":679,"title":{},"body":{"license.html":{}}}],["rights",{"_index":913,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["risks",{"_index":874,"title":{},"body":{"license.html":{}}}],["row",{"_index":80,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"injectables/PetsCore.html":{},"classes/UpdatePetInputDto.html":{},"miscellaneous/variables.html":{}}}],["rows",{"_index":87,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{}}}],["royalty",{"_index":734,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":942,"title":{},"body":{"license.html":{}}}],["saveoptions",{"_index":290,"title":{},"body":{"injectables/PetsCore.html":{},"injectables/PetsService.html":{}}}],["search",{"_index":83,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/UpdatePetInputDto.html":{}}}],["secret",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["section",{"_index":747,"title":{},"body":{"license.html":{}}}],["sections",{"_index":599,"title":{},"body":{"license.html":{}}}],["see",{"_index":952,"title":{},"body":{"license.html":{}}}],["sell",{"_index":750,"title":{},"body":{"license.html":{}}}],["sent",{"_index":703,"title":{},"body":{"license.html":{}}}],["sentry/node",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["sentry/tracing",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["separable",{"_index":687,"title":{},"body":{"license.html":{}}}],["separate",{"_index":834,"title":{},"body":{"license.html":{}}}],["sequelize",{"_index":249,"title":{},"body":{"classes/Pet.html":{},"injectables/PetsCore.html":{},"injectables/PetsService.html":{}}}],["sequelizemodule",{"_index":351,"title":{},"body":{"modules/PetsCoreModule.html":{},"modules/PostgresModule.html":{}}}],["sequelizemodule.forfeature([pet",{"_index":353,"title":{},"body":{"modules/PetsCoreModule.html":{}}}],["sequelizemodule.forrootasync",{"_index":457,"title":{},"body":{"modules/PostgresModule.html":{}}}],["server",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":842,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["service/pets/pets.service",{"_index":381,"title":{},"body":{"classes/PetsResolver.html":{}}}],["service/pets/pets.service.module",{"_index":400,"title":{},"body":{"modules/PetsResolverModule.html":{}}}],["service_not_available_error",{"_index":146,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["service_not_available_error.code",{"_index":189,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["service_not_available_error.message",{"_index":190,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["serviceunavailableexception",{"_index":140,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["set",{"_index":235,"title":{},"body":{"classes/Pet.html":{}}}],["set(value",{"_index":269,"title":{},"body":{"classes/Pet.html":{}}}],["shall",{"_index":597,"title":{},"body":{"license.html":{}}}],["shares",{"_index":636,"title":{},"body":{"license.html":{}}}],["sign",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smtp",{"_index":28,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["smtp.config",{"_index":29,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["software",{"_index":649,"title":{},"body":{"license.html":{}}}],["sole",{"_index":916,"title":{},"body":{"license.html":{}}}],["solely",{"_index":867,"title":{},"body":{"license.html":{}}}],["sortschema",{"_index":225,"title":{},"body":{"modules/MainModule.html":{}}}],["source",{"_index":12,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"modules/MainModule.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"modules/PetsCoreModule.html":{},"classes/PetsResolver.html":{},"modules/PetsResolverModule.html":{},"injectables/PetsService.html":{},"modules/PetsServiceModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{},"license.html":{}}}],["special",{"_index":888,"title":{},"body":{"license.html":{}}}],["specific",{"_index":953,"title":{},"body":{"license.html":{}}}],["src/.../enums.ts",{"_index":566,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../error",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../misc.helper.ts",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../success",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validation.ts",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/common/core/pets/pets.core.module.ts",{"_index":350,"title":{},"body":{"modules/PetsCoreModule.html":{}}}],["src/common/core/pets/pets.core.ts",{"_index":281,"title":{},"body":{"injectables/PetsCore.html":{},"coverage.html":{}}}],["src/common/core/pets/pets.core.ts:11",{"_index":286,"title":{},"body":{"injectables/PetsCore.html":{}}}],["src/common/core/pets/pets.core.ts:17",{"_index":291,"title":{},"body":{"injectables/PetsCore.html":{}}}],["src/common/core/pets/pets.core.ts:24",{"_index":295,"title":{},"body":{"injectables/PetsCore.html":{}}}],["src/common/core/pets/pets.core.ts:55",{"_index":298,"title":{},"body":{"injectables/PetsCore.html":{}}}],["src/common/dto/pet.dto.ts",{"_index":50,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/UpdatePetInputDto.html":{},"coverage.html":{}}}],["src/common/dto/pet.dto.ts:15",{"_index":59,"title":{},"body":{"classes/CreatePetInputDto.html":{}}}],["src/common/dto/pet.dto.ts:21",{"_index":483,"title":{},"body":{"classes/UpdatePetInputDto.html":{}}}],["src/common/dto/pet.dto.ts:27",{"_index":94,"title":{},"body":{"classes/FilterPetDto.html":{}}}],["src/common/dto/pet.dto.ts:30",{"_index":93,"title":{},"body":{"classes/FilterPetDto.html":{}}}],["src/common/dto/pet.dto.ts:33",{"_index":95,"title":{},"body":{"classes/FilterPetDto.html":{}}}],["src/common/dto/pet.dto.ts:36",{"_index":91,"title":{},"body":{"classes/FilterPetDto.html":{}}}],["src/common/dto/pet.dto.ts:39",{"_index":92,"title":{},"body":{"classes/FilterPetDto.html":{}}}],["src/common/dto/pet.dto.ts:42",{"_index":96,"title":{},"body":{"classes/FilterPetDto.html":{}}}],["src/common/dto/pet.dto.ts:48",{"_index":97,"title":{},"body":{"classes/FindAndCountAllPetResponseDto.html":{}}}],["src/common/dto/pet.dto.ts:51",{"_index":98,"title":{},"body":{"classes/FindAndCountAllPetResponseDto.html":{}}}],["src/common/dto/pet.dto.ts:57",{"_index":99,"title":{},"body":{"classes/FindOneFilterPetDto.html":{}}}],["src/common/dto/pet.dto.ts:60",{"_index":100,"title":{},"body":{"classes/FindOneFilterPetDto.html":{}}}],["src/common/dto/response.dto.ts",{"_index":112,"title":{},"body":{"classes/GqlResponseDto.html":{},"coverage.html":{}}}],["src/common/dto/response.dto.ts:2",{"_index":119,"title":{},"body":{"classes/GqlResponseDto.html":{}}}],["src/common/dto/response.dto.ts:3",{"_index":116,"title":{},"body":{"classes/GqlResponseDto.html":{}}}],["src/common/helpers/misc.helper.ts",{"_index":494,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/interfaces/pet.interface.ts",{"_index":192,"title":{},"body":{"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"coverage.html":{}}}],["src/common/interfaces/response.interface.ts",{"_index":104,"title":{},"body":{"interfaces/GqlResponse.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/Response.html":{},"coverage.html":{}}}],["src/common/resolver/pets/pets.resolver.module.ts",{"_index":399,"title":{},"body":{"modules/PetsResolverModule.html":{}}}],["src/common/resolver/pets/pets.resolver.ts",{"_index":355,"title":{},"body":{"classes/PetsResolver.html":{},"coverage.html":{}}}],["src/common/resolver/pets/pets.resolver.ts:12",{"_index":361,"title":{},"body":{"classes/PetsResolver.html":{}}}],["src/common/resolver/pets/pets.resolver.ts:16",{"_index":372,"title":{},"body":{"classes/PetsResolver.html":{}}}],["src/common/resolver/pets/pets.resolver.ts:22",{"_index":368,"title":{},"body":{"classes/PetsResolver.html":{}}}],["src/common/resolver/pets/pets.resolver.ts:28",{"_index":364,"title":{},"body":{"classes/PetsResolver.html":{}}}],["src/common/resolver/pets/pets.resolver.ts:33",{"_index":377,"title":{},"body":{"classes/PetsResolver.html":{}}}],["src/common/resolver/pets/pets.resolver.ts:41",{"_index":374,"title":{},"body":{"classes/PetsResolver.html":{}}}],["src/common/service/pets/pets.service.module.ts",{"_index":433,"title":{},"body":{"modules/PetsServiceModule.html":{}}}],["src/common/service/pets/pets.service.ts",{"_index":402,"title":{},"body":{"injectables/PetsService.html":{},"coverage.html":{}}}],["src/common/service/pets/pets.service.ts:23",{"_index":406,"title":{},"body":{"injectables/PetsService.html":{}}}],["src/common/service/pets/pets.service.ts:26",{"_index":408,"title":{},"body":{"injectables/PetsService.html":{}}}],["src/common/service/pets/pets.service.ts:39",{"_index":409,"title":{},"body":{"injectables/PetsService.html":{}}}],["src/common/service/pets/pets.service.ts:47",{"_index":410,"title":{},"body":{"injectables/PetsService.html":{}}}],["src/common/service/pets/pets.service.ts:58",{"_index":416,"title":{},"body":{"injectables/PetsService.html":{}}}],["src/common/service/pets/pets.service.ts:74",{"_index":413,"title":{},"body":{"injectables/PetsService.html":{}}}],["src/configs/configuration.module.ts",{"_index":14,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["src/configs/validation.ts",{"_index":498,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/enums.ts",{"_index":567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/constants/error",{"_index":499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/success",{"_index":501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/filters/gql",{"_index":122,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/main.module.ts",{"_index":204,"title":{},"body":{"modules/MainModule.html":{}}}],["src/main.ts",{"_index":502,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/providers/database/pg/models/pets.model.ts",{"_index":231,"title":{},"body":{"classes/Pet.html":{},"coverage.html":{}}}],["src/providers/database/pg/models/pets.model.ts:30",{"_index":240,"title":{},"body":{"classes/Pet.html":{}}}],["src/providers/database/pg/models/pets.model.ts:37",{"_index":242,"title":{},"body":{"classes/Pet.html":{}}}],["src/providers/database/pg/models/pets.model.ts:57",{"_index":236,"title":{},"body":{"classes/Pet.html":{}}}],["src/providers/database/pg/models/pets.model.ts:77",{"_index":243,"title":{},"body":{"classes/Pet.html":{}}}],["src/providers/database/pg/models/pets.model.ts:97",{"_index":237,"title":{},"body":{"classes/Pet.html":{}}}],["src/providers/database/pg/postgresql.module.ts",{"_index":455,"title":{},"body":{"modules/PostgresModule.html":{}}}],["src/providers/logger/pino",{"_index":436,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["src/schemas/schema.gql",{"_index":221,"title":{},"body":{"modules/MainModule.html":{}}}],["ssl",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":582,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":828,"title":{},"body":{"license.html":{}}}],["stated",{"_index":746,"title":{},"body":{"license.html":{}}}],["statement",{"_index":820,"title":{},"body":{"license.html":{}}}],["statements",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["stating",{"_index":789,"title":{},"body":{"license.html":{}}}],["status",{"_index":108,"title":{},"body":{"interfaces/GqlResponse.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/Response.html":{}}}],["stoppage",{"_index":896,"title":{},"body":{"license.html":{}}}],["string",{"_index":55,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"classes/GqlResponseDto.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"classes/Pet.html":{},"classes/PetsResolver.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{}}}],["subject",{"_index":725,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":742,"title":{},"body":{"license.html":{}}}],["submission",{"_index":824,"title":{},"body":{"license.html":{}}}],["submit",{"_index":697,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":695,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":721,"title":{},"body":{"license.html":{}}}],["success",{"_index":394,"title":{},"body":{"classes/PetsResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["such",{"_index":625,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":833,"title":{},"body":{"license.html":{}}}],["support",{"_index":909,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":958,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":477,"title":{},"body":{"modules/PostgresModule.html":{}}}],["synchronize",{"_index":476,"title":{},"body":{"modules/PostgresModule.html":{}}}],["syntax",{"_index":939,"title":{},"body":{"license.html":{}}}],["system",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system_error",{"_index":147,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemerror",{"_index":570,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["systems",{"_index":707,"title":{},"body":{"license.html":{}}}],["table",{"_index":244,"title":{},"body":{"classes/Pet.html":{},"coverage.html":{}}}],["tablename",{"_index":256,"title":{},"body":{"classes/Pet.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":446,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["terminate",{"_index":772,"title":{},"body":{"license.html":{}}}],["terms",{"_index":591,"title":{},"body":{"license.html":{}}}],["test",{"_index":473,"title":{},"body":{"modules/PostgresModule.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":799,"title":{},"body":{"license.html":{}}}],["theory",{"_index":879,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":691,"title":{},"body":{"license.html":{}}}],["third",{"_index":807,"title":{},"body":{"license.html":{}}}],["this.getdatavalue('created_at",{"_index":264,"title":{},"body":{"classes/Pet.html":{}}}],["this.getdatavalue('deleted_at",{"_index":276,"title":{},"body":{"classes/Pet.html":{}}}],["this.getdatavalue('updated_at",{"_index":274,"title":{},"body":{"classes/Pet.html":{}}}],["this.petmodel.findandcountall(filter",{"_index":341,"title":{},"body":{"injectables/PetsCore.html":{}}}],["this.petmodel.findone(filter",{"_index":346,"title":{},"body":{"injectables/PetsCore.html":{}}}],["this.petscore.create(createpetinput",{"_index":424,"title":{},"body":{"injectables/PetsService.html":{}}}],["this.petscore.findandcountall(query",{"_index":425,"title":{},"body":{"injectables/PetsService.html":{}}}],["this.petscore.findone",{"_index":418,"title":{},"body":{"injectables/PetsService.html":{}}}],["this.petsservice.create(createpetinput",{"_index":388,"title":{},"body":{"classes/PetsResolver.html":{}}}],["this.petsservice.findandcountall(query",{"_index":386,"title":{},"body":{"classes/PetsResolver.html":{}}}],["this.petsservice.findone(id",{"_index":384,"title":{},"body":{"classes/PetsResolver.html":{}}}],["this.petsservice.remove(id",{"_index":393,"title":{},"body":{"classes/PetsResolver.html":{}}}],["this.petsservice.update(id",{"_index":391,"title":{},"body":{"classes/PetsResolver.html":{}}}],["this.setdatavalue",{"_index":271,"title":{},"body":{"classes/Pet.html":{}}}],["those",{"_index":753,"title":{},"body":{"license.html":{}}}],["through",{"_index":600,"title":{},"body":{"license.html":{}}}],["throw",{"_index":420,"title":{},"body":{"injectables/PetsService.html":{}}}],["timezone",{"_index":252,"title":{},"body":{"classes/Pet.html":{},"dependencies.html":{}}}],["title",{"_index":863,"title":{},"body":{"license.html":{}}}],["tort",{"_index":880,"title":{},"body":{"license.html":{}}}],["tracking",{"_index":709,"title":{},"body":{"license.html":{}}}],["trade",{"_index":840,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":793,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":838,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":751,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":655,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["translatetime",{"_index":450,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["translation",{"_index":656,"title":{},"body":{"license.html":{}}}],["transport",{"_index":445,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["true",{"_index":39,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"modules/MainModule.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{},"classes/UpdatePetInputDto.html":{},"miscellaneous/enumerations.html":{}}}],["true})@column({type",{"_index":233,"title":{},"body":{"classes/Pet.html":{}}}],["tt",{"_index":453,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["type",{"_index":54,"title":{},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"interfaces/GqlResponse.html":{},"classes/GqlResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFindAndCountAll.html":{},"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"classes/Pet.html":{},"injectables/PetsCore.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"interfaces/Response.html":{},"classes/UpdatePetInputDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":309,"title":{},"body":{"injectables/PetsCore.html":{}}}],["types",{"_index":661,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":250,"title":{},"body":{"classes/Pet.html":{}}}],["tz('asia/jakarta",{"_index":266,"title":{},"body":{"classes/Pet.html":{}}}],["unauthorized",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unauthorized_error",{"_index":148,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unauthorized_error.code",{"_index":181,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["unauthorized_error.message",{"_index":182,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["unauthorizederror",{"_index":568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unauthorizedexception",{"_index":141,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["unavailable",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unavailableserviceerror",{"_index":573,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":234,"title":{},"body":{"classes/Pet.html":{}}}],["under",{"_index":615,"title":{},"body":{"license.html":{}}}],["underscored",{"_index":254,"title":{},"body":{"classes/Pet.html":{}}}],["union",{"_index":610,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":370,"title":{},"body":{"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":826,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":966,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":142,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["update",{"_index":404,"title":{},"body":{"injectables/PetsService.html":{}}}],["update(id",{"_index":414,"title":{},"body":{"injectables/PetsService.html":{}}}],["updated_at",{"_index":195,"title":{},"body":{"interfaces/IOptionalPet.html":{},"interfaces/IPet.html":{},"classes/Pet.html":{},"miscellaneous/enumerations.html":{}}}],["updatedat",{"_index":260,"title":{},"body":{"classes/Pet.html":{}}}],["updatepet",{"_index":358,"title":{},"body":{"classes/PetsResolver.html":{}}}],["updatepet(id",{"_index":375,"title":{},"body":{"classes/PetsResolver.html":{}}}],["updatepetinput",{"_index":376,"title":{},"body":{"classes/PetsResolver.html":{},"injectables/PetsService.html":{}}}],["updatepetinputdto",{"_index":73,"title":{"classes/UpdatePetInputDto.html":{}},"body":{"classes/CreatePetInputDto.html":{},"classes/FilterPetDto.html":{},"classes/FindAndCountAllPetResponseDto.html":{},"classes/FindOneFilterPetDto.html":{},"classes/PetsResolver.html":{},"injectables/PetsService.html":{},"classes/UpdatePetInputDto.html":{},"coverage.html":{}}}],["use",{"_index":593,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":216,"title":{},"body":{"modules/MainModule.html":{},"modules/PinoLoggerModule.html":{},"modules/PostgresModule.html":{}}}],["username",{"_index":467,"title":{},"body":{"modules/PostgresModule.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":871,"title":{},"body":{"license.html":{}}}],["utc:mm/dd/yyyy",{"_index":451,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["validation",{"_index":35,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["validation_error",{"_index":149,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validation_error.code",{"_index":187,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["validation_error.message",{"_index":188,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["validationerror",{"_index":571,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validationschema",{"_index":34,"title":{},"body":{"modules/AppConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":270,"title":{},"body":{"classes/Pet.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":968,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":700,"title":{},"body":{"license.html":{}}}],["version",{"_index":586,"title":{},"body":{"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":859,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":853,"title":{},"body":{"license.html":{}}}],["wherever",{"_index":806,"title":{},"body":{"license.html":{}}}],["whether",{"_index":626,"title":{},"body":{"license.html":{}}}],["whole",{"_index":683,"title":{},"body":{"license.html":{}}}],["within",{"_index":723,"title":{},"body":{"license.html":{}}}],["without",{"_index":778,"title":{},"body":{"license.html":{}}}],["work",{"_index":662,"title":{},"body":{"license.html":{}}}],["works",{"_index":675,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":730,"title":{},"body":{"license.html":{}}}],["writing",{"_index":718,"title":{},"body":{"license.html":{}}}],["written",{"_index":701,"title":{},"body":{"license.html":{}}}],["yes",{"_index":118,"title":{},"body":{"classes/GqlResponseDto.html":{},"injectables/PetsCore.html":{},"injectables/PetsService.html":{},"miscellaneous/enumerations.html":{}}}],["yyyy",{"_index":947,"title":{},"body":{"license.html":{}}}],["z",{"_index":454,"title":{},"body":{"modules/PinoLoggerModule.html":{}}}],["zoom",{"_index":8,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/MainModule.html":{},"modules/PetsCoreModule.html":{},"modules/PetsResolverModule.html":{},"modules/PetsServiceModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppConfigModule.html":{"url":"modules/AppConfigModule.html","title":"module - AppConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    AppConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppConfigModule\n\n\n\ncluster_AppConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nAppConfigModule\n\nAppConfigModule\n\nConfigService  -->\n\nAppConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/configs/configuration.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport common from './common.config';\nimport db from './db.config';\nimport fluentd from './fluentd.config';\nimport minio from './minio.config';\nimport smtp from './smtp.config';\nimport queue from './queue.config';\nimport cache from './cache.config';\nimport { validationSchema } from './validation';\n\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            isGlobal: true,\n            envFilePath: [`env/.env.${process.env.NODE_ENV}`],\n            load: [common, db, fluentd, minio, smtp, queue, cache],\n            validationSchema,\n        }),\n    ],\n    providers: [ConfigService],\n    exports: [ConfigService],\n})\nexport class AppConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePetInputDto.html":{"url":"classes/CreatePetInputDto.html","title":"class - CreatePetInputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePetInputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/pet.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pet.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ArgsType,\n    Field,\n    InputType,\n    Int,\n    ObjectType,\n    PartialType,\n} from '@nestjs/graphql';\nimport { OrderType, Pagination, PetOrderBy } from '../../constants/enums';\nimport { Pet } from '../../providers/database/pg/models/pets.model';\n\n@InputType()\nexport class CreatePetInputDto {\n    @Field(() => String)\n    name: string;\n}\n\n@InputType()\nexport class UpdatePetInputDto extends PartialType(CreatePetInputDto) {\n    @Field(() => String, { nullable: true })\n    name?: string;\n}\n\n@ArgsType()\nexport class FilterPetDto {\n    @Field(() => Pagination, { nullable: true })\n    pagination?: Pagination;\n\n    @Field(() => Int, { nullable: true })\n    page?: number;\n\n    @Field(() => Int, { nullable: true })\n    row?: number;\n\n    @Field(() => PetOrderBy, { nullable: true })\n    order_by?: PetOrderBy;\n\n    @Field(() => OrderType, { nullable: true })\n    order_type?: OrderType;\n\n    @Field(() => String, { nullable: true })\n    search?: string;\n}\n\n@ObjectType()\nexport class FindAndCountAllPetResponseDto {\n    @Field(() => Int, { nullable: false })\n    count: number;\n\n    @Field(() => [Pet], { nullable: false })\n    rows: Pet[];\n}\n\n@ArgsType()\nexport class FindOneFilterPetDto {\n    @Field(() => Int, { nullable: true })\n    id?: number;\n\n    @Field(() => String, { nullable: true })\n    name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterPetDto.html":{"url":"classes/FilterPetDto.html","title":"class - FilterPetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterPetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/pet.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                order_by\n                            \n                            \n                                    Optional\n                                order_type\n                            \n                            \n                                    Optional\n                                page\n                            \n                            \n                                    Optional\n                                pagination\n                            \n                            \n                                    Optional\n                                row\n                            \n                            \n                                    Optional\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        order_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PetOrderBy\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pet.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        order_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pet.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pet.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pagination\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pet.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pet.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pet.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ArgsType,\n    Field,\n    InputType,\n    Int,\n    ObjectType,\n    PartialType,\n} from '@nestjs/graphql';\nimport { OrderType, Pagination, PetOrderBy } from '../../constants/enums';\nimport { Pet } from '../../providers/database/pg/models/pets.model';\n\n@InputType()\nexport class CreatePetInputDto {\n    @Field(() => String)\n    name: string;\n}\n\n@InputType()\nexport class UpdatePetInputDto extends PartialType(CreatePetInputDto) {\n    @Field(() => String, { nullable: true })\n    name?: string;\n}\n\n@ArgsType()\nexport class FilterPetDto {\n    @Field(() => Pagination, { nullable: true })\n    pagination?: Pagination;\n\n    @Field(() => Int, { nullable: true })\n    page?: number;\n\n    @Field(() => Int, { nullable: true })\n    row?: number;\n\n    @Field(() => PetOrderBy, { nullable: true })\n    order_by?: PetOrderBy;\n\n    @Field(() => OrderType, { nullable: true })\n    order_type?: OrderType;\n\n    @Field(() => String, { nullable: true })\n    search?: string;\n}\n\n@ObjectType()\nexport class FindAndCountAllPetResponseDto {\n    @Field(() => Int, { nullable: false })\n    count: number;\n\n    @Field(() => [Pet], { nullable: false })\n    rows: Pet[];\n}\n\n@ArgsType()\nexport class FindOneFilterPetDto {\n    @Field(() => Int, { nullable: true })\n    id?: number;\n\n    @Field(() => String, { nullable: true })\n    name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAndCountAllPetResponseDto.html":{"url":"classes/FindAndCountAllPetResponseDto.html","title":"class - FindAndCountAllPetResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAndCountAllPetResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/pet.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                rows\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pet.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pet[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pet.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ArgsType,\n    Field,\n    InputType,\n    Int,\n    ObjectType,\n    PartialType,\n} from '@nestjs/graphql';\nimport { OrderType, Pagination, PetOrderBy } from '../../constants/enums';\nimport { Pet } from '../../providers/database/pg/models/pets.model';\n\n@InputType()\nexport class CreatePetInputDto {\n    @Field(() => String)\n    name: string;\n}\n\n@InputType()\nexport class UpdatePetInputDto extends PartialType(CreatePetInputDto) {\n    @Field(() => String, { nullable: true })\n    name?: string;\n}\n\n@ArgsType()\nexport class FilterPetDto {\n    @Field(() => Pagination, { nullable: true })\n    pagination?: Pagination;\n\n    @Field(() => Int, { nullable: true })\n    page?: number;\n\n    @Field(() => Int, { nullable: true })\n    row?: number;\n\n    @Field(() => PetOrderBy, { nullable: true })\n    order_by?: PetOrderBy;\n\n    @Field(() => OrderType, { nullable: true })\n    order_type?: OrderType;\n\n    @Field(() => String, { nullable: true })\n    search?: string;\n}\n\n@ObjectType()\nexport class FindAndCountAllPetResponseDto {\n    @Field(() => Int, { nullable: false })\n    count: number;\n\n    @Field(() => [Pet], { nullable: false })\n    rows: Pet[];\n}\n\n@ArgsType()\nexport class FindOneFilterPetDto {\n    @Field(() => Int, { nullable: true })\n    id?: number;\n\n    @Field(() => String, { nullable: true })\n    name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindOneFilterPetDto.html":{"url":"classes/FindOneFilterPetDto.html","title":"class - FindOneFilterPetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindOneFilterPetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/pet.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pet.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pet.dto.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ArgsType,\n    Field,\n    InputType,\n    Int,\n    ObjectType,\n    PartialType,\n} from '@nestjs/graphql';\nimport { OrderType, Pagination, PetOrderBy } from '../../constants/enums';\nimport { Pet } from '../../providers/database/pg/models/pets.model';\n\n@InputType()\nexport class CreatePetInputDto {\n    @Field(() => String)\n    name: string;\n}\n\n@InputType()\nexport class UpdatePetInputDto extends PartialType(CreatePetInputDto) {\n    @Field(() => String, { nullable: true })\n    name?: string;\n}\n\n@ArgsType()\nexport class FilterPetDto {\n    @Field(() => Pagination, { nullable: true })\n    pagination?: Pagination;\n\n    @Field(() => Int, { nullable: true })\n    page?: number;\n\n    @Field(() => Int, { nullable: true })\n    row?: number;\n\n    @Field(() => PetOrderBy, { nullable: true })\n    order_by?: PetOrderBy;\n\n    @Field(() => OrderType, { nullable: true })\n    order_type?: OrderType;\n\n    @Field(() => String, { nullable: true })\n    search?: string;\n}\n\n@ObjectType()\nexport class FindAndCountAllPetResponseDto {\n    @Field(() => Int, { nullable: false })\n    count: number;\n\n    @Field(() => [Pet], { nullable: false })\n    rows: Pet[];\n}\n\n@ArgsType()\nexport class FindOneFilterPetDto {\n    @Field(() => Int, { nullable: true })\n    id?: number;\n\n    @Field(() => String, { nullable: true })\n    name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GqlResponse.html":{"url":"interfaces/GqlResponse.html","title":"interface - GqlResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GqlResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Response {\n    status?: number;\n    code: number | string;\n    message: string;\n    result?: any;\n}\n\nexport interface GqlResponse {\n    code: number | string;\n    message: string;\n}\n\nexport interface IFindAndCountAll {\n    count: number;\n    rows: Type;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlResponseDto.html":{"url":"classes/GqlResponseDto.html","title":"class - GqlResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/common/dto/response.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/dto/response.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/dto/response.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GqlResponseDto {\n    code: string;\n    message: string;\n\n    constructor(partial?: Partial) {\n        Object.assign(this, partial);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/gql-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        GqlExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        catch\n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/gql-exception.filter.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ArgumentsHost,\n    BadRequestException,\n    Catch,\n    ForbiddenException,\n    HttpException,\n    NotFoundException,\n    ServiceUnavailableException,\n    UnauthorizedException,\n    UnprocessableEntityException,\n} from '@nestjs/common';\nimport { GqlArgumentsHost, GqlExceptionFilter } from '@nestjs/graphql';\n// import {\n//     BAD_REQUEST_ERROR,\n//     FORBIDDEN_ERROR,\n//     SERVICE_NOT_AVAILABLE_ERROR,\n//     SYSTEM_ERROR,\n//     UNAUTHORIZED_ERROR,\n//     VALIDATION_ERROR,\n//     NOT_FOUND_ERROR,\n// } from '../constants/error-codes';\n// import { Response } from '../interfaces/index.interface';\n\n@Catch()\nexport class HttpExceptionFilter implements GqlExceptionFilter {\n    async catch(exception: HttpException, host: ArgumentsHost): Promise {\n        // const gqlHost = GqlArgumentsHost.create(host);\n        // const context = gqlHost.switchToHttp();\n        // const response = context.getResponse();\n\n        if (process.env.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.info('Exception response from error filter =>', exception);\n        }\n\n        if (exception instanceof BadRequestException) {\n            // const res = exception.getResponse() as Response;\n            // return response.status(exception.getStatus()).json({\n            //     status: exception.getStatus(),\n            //     code: res.code || BAD_REQUEST_ERROR.code,\n            //     message: res.message || BAD_REQUEST_ERROR.message,\n            //     result: res.result,\n            // });\n            return exception;\n        }\n        if (exception instanceof UnauthorizedException) {\n            // const res = exception.getResponse() as Response;\n            // return response.status(exception.getStatus()).json({\n            //     status: exception.getStatus(),\n            //     code: res.code || UNAUTHORIZED_ERROR.code,\n            //     message: res.message || UNAUTHORIZED_ERROR.message,\n            //     result: res.result,\n            // });\n            return exception;\n        }\n        if (exception instanceof ForbiddenException) {\n            // const res = exception.getResponse() as Response;\n            // return response.status(exception.getStatus()).json({\n            //     status: exception.getStatus(),\n            //     code: res.code || FORBIDDEN_ERROR.code,\n            //     message: res.message || FORBIDDEN_ERROR.message,\n            //     result: res.result,\n            // });\n            return exception;\n        }\n        if (exception instanceof NotFoundException) {\n            // const res = exception.getResponse() as Response;\n            // return response.status(exception.getStatus()).json({\n            //     status: exception.getStatus(),\n            //     code: res.code || NOT_FOUND_ERROR.code,\n            //     message: res.message || NOT_FOUND_ERROR.message,\n            //     result: res.result,\n            // });\n            return exception;\n        }\n        if (exception instanceof UnprocessableEntityException) {\n            // const res = exception.getResponse() as Response;\n            // return response.status(exception.getStatus()).json({\n            //     status: exception.getStatus(),\n            //     code: res.code || VALIDATION_ERROR.code,\n            //     message: res.message || VALIDATION_ERROR.message,\n            //     result: res.result,\n            // });\n            return exception;\n        }\n        if (exception instanceof ServiceUnavailableException) {\n            // const res = exception.getResponse() as Response;\n            // return response.status(exception.getStatus()).json({\n            //     status: exception.getStatus(),\n            //     code: res.code || SERVICE_NOT_AVAILABLE_ERROR.code,\n            //     message: res.message || SERVICE_NOT_AVAILABLE_ERROR.message,\n            //     result: res.result,\n            // });\n            return exception;\n        }\n\n        return exception;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindAndCountAll.html":{"url":"interfaces/IFindAndCountAll.html","title":"interface - IFindAndCountAll","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindAndCountAll\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            rows\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rows:         Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Response {\n    status?: number;\n    code: number | string;\n    message: string;\n    result?: any;\n}\n\nexport interface GqlResponse {\n    code: number | string;\n    message: string;\n}\n\nexport interface IFindAndCountAll {\n    count: number;\n    rows: Type;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOptionalPet.html":{"url":"interfaces/IOptionalPet.html","title":"interface - IOptionalPet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOptionalPet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/pet.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deleted_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updated_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPet {\n    id?: bigint;\n    name: string;\n    created_at?: string;\n    updated_at?: string;\n    deleted_at?: string;\n}\nexport interface IOptionalPet {\n    id?: bigint;\n    name?: string;\n    created_at?: string;\n    updated_at?: string;\n    deleted_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPet.html":{"url":"interfaces/IPet.html","title":"interface - IPet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/pet.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deleted_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updated_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPet {\n    id?: bigint;\n    name: string;\n    created_at?: string;\n    updated_at?: string;\n    deleted_at?: string;\n}\nexport interface IOptionalPet {\n    id?: bigint;\n    name?: string;\n    created_at?: string;\n    updated_at?: string;\n    deleted_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MainModule\n\n\n\ncluster_MainModule_imports\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nAppConfigModule->MainModule\n\n\n\n\n\nPetsResolverModule\n\nPetsResolverModule\n\nMainModule -->\n\nPetsResolverModule->MainModule\n\n\n\n\n\nPinoLoggerModule\n\nPinoLoggerModule\n\nMainModule -->\n\nPinoLoggerModule->MainModule\n\n\n\n\n\nPostgresModule\n\nPostgresModule\n\nMainModule -->\n\nPostgresModule->MainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/main.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            PetsResolverModule\n                        \n                        \n                            PinoLoggerModule\n                        \n                        \n                            PostgresModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { join } from 'path';\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';\nimport { PinoLoggerModule, PostgresModule } from './providers/index.provider';\nimport { AppConfigModule } from './configs/configuration.module';\nimport { PetsResolverModule } from './common/resolver/pets/pets.resolver.module';\nimport { ConfigService } from '@nestjs/config';\n\n@Module({\n    imports: [\n        AppConfigModule,\n        PinoLoggerModule,\n        PostgresModule,\n        GraphQLModule.forRootAsync({\n            driver: ApolloDriver,\n            useFactory: (configService: ConfigService) => {\n                const commonConfig = configService.get('common');\n                return {\n                    autoSchemaFile: join(\n                        process.cwd(),\n                        'src/schemas/schema.gql',\n                    ),\n                    debug: true,\n                    playground: commonConfig.env !== 'production',\n                    sortSchema: true,\n                    cors: true,\n                    csrfPrevention: true,\n                    cache: 'bounded',\n                };\n            },\n            inject: [ConfigService],\n        }),\n        PetsResolverModule,\n    ],\n    controllers: [],\n    providers: [],\n})\nexport class MainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pet.html":{"url":"classes/Pet.html","title":"class - Pet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/database/pg/models/pets.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({type: undefined, get: , set: })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/providers/database/pg/models/pets.model.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({type: undefined, get: , set: })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/providers/database/pg/models/pets.model.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@AutoIncrement()@PrimaryKey()@Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/providers/database/pg/models/pets.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/providers/database/pg/models/pets.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({type: undefined, get: , set: })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/providers/database/pg/models/pets.model.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Table,\n    Column,\n    Model,\n    DataType,\n    AutoIncrement,\n    PrimaryKey,\n} from 'sequelize-typescript';\nimport * as moment from 'moment-timezone';\nimport { Field, Int, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\n@Table({\n    paranoid: true,\n    underscored: true,\n    freezeTableName: true,\n    tableName: 'pets',\n    deletedAt: 'deleted_at',\n    createdAt: 'created_at',\n    updatedAt: 'updated_at',\n})\nexport class Pet extends Model {\n    @Field(() => Int)\n    @AutoIncrement\n    @PrimaryKey\n    @Column({\n        type: DataType.BIGINT,\n        allowNull: false,\n    })\n    id?: number;\n\n    @Field(() => String)\n    @Column({\n        type: DataType.STRING,\n        allowNull: false,\n    })\n    name: string;\n\n    @Field(() => String, { nullable: true })\n    @Column({\n        type: DataType.DATE,\n        get() {\n            if (this.getDataValue('created_at'))\n                return moment(this.getDataValue('created_at'))\n                    .tz('Asia/Jakarta')\n                    .format();\n            return null;\n        },\n        set(value) {\n            if (value)\n                this.setDataValue(\n                    'created_at',\n                    moment.tz(value, 'Asia/Jakarta').toISOString(),\n                );\n        },\n    })\n    created_at?: string;\n\n    @Field(() => String, { nullable: true })\n    @Column({\n        type: DataType.DATE,\n        get() {\n            if (this.getDataValue('updated_at'))\n                return moment(this.getDataValue('updated_at'))\n                    .tz('Asia/Jakarta')\n                    .format();\n            return null;\n        },\n        set(value) {\n            if (value)\n                this.setDataValue(\n                    'updated_at',\n                    moment.tz(value, 'Asia/Jakarta').toISOString(),\n                );\n        },\n    })\n    updated_at?: string;\n\n    @Field(() => String, { nullable: true })\n    @Column({\n        type: DataType.DATE,\n        get() {\n            if (this.getDataValue('deleted_at'))\n                return moment(this.getDataValue('deleted_at'))\n                    .tz('Asia/Jakarta')\n                    .format();\n            return null;\n        },\n        set(value) {\n            if (value)\n                this.setDataValue(\n                    'deleted_at',\n                    moment.tz(value, 'Asia/Jakarta').toISOString(),\n                );\n        },\n    })\n    deleted_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PetsCore.html":{"url":"injectables/PetsCore.html","title":"injectable - PetsCore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PetsCore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/core/pets/pets.core.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAndCountAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(PetModel)\n                    \n                \n                        \n                            \n                                Defined in src/common/core/pets/pets.core.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        PetModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: IPet, options?: SaveOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/common/core/pets/pets.core.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IPet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            SaveOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAndCountAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAndCountAll(data?: FilterPetDto, options?: FindAndCountOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/common/core/pets/pets.core.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FilterPetDto\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindAndCountOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data?: FindOneFilterPetDto, options?: FindOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/common/core/pets/pets.core.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FindOneFilterPetDto\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { FindOptions, FindAndCountOptions, Op, SaveOptions } from 'sequelize';\nimport { OrderType, Pagination, PetOrderBy } from '../../../constants/enums';\nimport { IFindAndCountAll, IPet } from '../../interfaces/index.interface';\nimport { Pet } from '../../../providers/database/pg/models/index.model';\nimport { CreatePagination } from '../../helpers/index.helper';\nimport { FilterPetDto, FindOneFilterPetDto } from '../../dto/index.dto';\n\n@Injectable()\nexport class PetsCore {\n    constructor(\n        @InjectModel(Pet)\n        private readonly PetModel: typeof Pet,\n    ) {}\n\n    async create(data: IPet, options?: SaveOptions): Promise {\n        const admin = new Pet();\n        admin.name = data.name;\n\n        return admin.save(options);\n    }\n\n    async findAndCountAll(\n        data?: FilterPetDto,\n        options?: FindAndCountOptions,\n    ): Promise> {\n        const filterData: FilterPetDto = {\n            pagination: data?.pagination || Pagination.yes,\n            page: data?.page || 1,\n            row: data?.row || 10,\n            order_by: data?.order_by || PetOrderBy.id,\n            order_type: data?.order_type || OrderType.asc,\n        };\n\n        const filter: FindAndCountOptions = {\n            order: [[filterData.order_by, filterData.order_type]],\n            where: {},\n            ...options,\n        };\n        if (data?.pagination === 'true') {\n            const pager = CreatePagination(filterData.page, filterData.row);\n            Object.assign(filter, { limit: pager.row, offset: pager.page });\n        }\n        if (data?.search) {\n            Object.assign(filter.where, {\n                name: {\n                    [Op.iLike]: `%${data.search}%`,\n                },\n            });\n        }\n        return this.PetModel.findAndCountAll(filter);\n    }\n\n    async findOne(\n        data?: FindOneFilterPetDto,\n        options?: FindOptions,\n    ): Promise {\n        const filter: FindOptions = {\n            where: {},\n            ...options,\n        };\n\n        if (data?.id) {\n            Object.assign(filter.where, { id: data.id });\n        }\n        if (data?.name) {\n            Object.assign(filter.where, {\n                name: {\n                    [Op.iLike]: `%${data.name}%`,\n                },\n            });\n        }\n\n        const pet = await this.PetModel.findOne(filter);\n        if (!pet) {\n            return null;\n        }\n        return pet;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PetsCoreModule.html":{"url":"modules/PetsCoreModule.html","title":"module - PetsCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PetsCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PetsCoreModule\n\n\n\ncluster_PetsCoreModule_providers\n\n\n\n\nPetsCore\n\nPetsCore\n\n\n\nPetsCoreModule\n\nPetsCoreModule\n\nPetsCoreModule -->\n\nPetsCore->PetsCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/core/pets/pets.core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PetsCore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Pet } from '../../../providers/database/pg/models/index.model';\nimport { PetsCore } from './pets.core';\n\n@Module({\n    imports: [SequelizeModule.forFeature([Pet])],\n    providers: [PetsCore],\n    exports: [SequelizeModule],\n})\nexport class PetsCoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PetsResolver.html":{"url":"classes/PetsResolver.html","title":"class - PetsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PetsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/resolver/pets/pets.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPet\n                            \n                            \n                                    Async\n                                findAndCountAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                removePet\n                            \n                            \n                                updatePet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(petsService: PetsService)\n                    \n                \n                        \n                            \n                                Defined in src/common/resolver/pets/pets.resolver.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        petsService\n                                                  \n                                                        \n                                                                        PetsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPet\n                        \n                    \n                \n            \n            \n                \ncreatePet(createPetInput: CreatePetInputDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/common/resolver/pets/pets.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPetInput\n                                    \n                                                CreatePetInputDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAndCountAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAndCountAll(query: FilterPetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pets'})\n                \n            \n\n            \n                \n                    Defined in src/common/resolver/pets/pets.resolver.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterPetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pet'})\n                \n            \n\n            \n                \n                    Defined in src/common/resolver/pets/pets.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removePet\n                        \n                    \n                \n            \n            \n                \n                    \n                    removePet(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/common/resolver/pets/pets.resolver.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePet\n                        \n                    \n                \n            \n            \n                \nupdatePet(id: number, updatePetInput: UpdatePetInputDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/common/resolver/pets/pets.resolver.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePetInput\n                                    \n                                                UpdatePetInputDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args, Int } from '@nestjs/graphql';\nimport { PetsService } from '../../service/pets/pets.service';\nimport { Pet } from '../../../providers/database/pg/models/index.model';\nimport {\n    CreatePetInputDto,\n    UpdatePetInputDto,\n    FilterPetDto,\n    FindAndCountAllPetResponseDto,\n} from '../../dto/index.dto';\n\n@Resolver(() => Pet)\nexport class PetsResolver {\n    constructor(private readonly petsService: PetsService) {}\n\n    @Query(() => Pet, { name: 'pet' })\n    async findOne(@Args('id', { type: () => Int }) id: number) {\n        const pet = await this.petsService.findOne(id);\n        return pet;\n    }\n\n    @Query(() => FindAndCountAllPetResponseDto, { name: 'pets' })\n    async findAndCountAll(@Args() query: FilterPetDto) {\n        const pets = await this.petsService.findAndCountAll(query);\n        return pets;\n    }\n\n    @Mutation(() => Pet)\n    createPet(@Args('input') createPetInput: CreatePetInputDto) {\n        return this.petsService.create(createPetInput);\n    }\n\n    @Mutation(() => Pet)\n    updatePet(\n        @Args('id', { type: () => Int }) id: number,\n        @Args('input') updatePetInput: UpdatePetInputDto,\n    ) {\n        return this.petsService.update(id, updatePetInput);\n    }\n\n    @Mutation(() => String)\n    async removePet(@Args('id', { type: () => Int }) id: number) {\n        await this.petsService.remove(id);\n        return 'success delete pet';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PetsResolverModule.html":{"url":"modules/PetsResolverModule.html","title":"module - PetsResolverModule","body":"\n                   \n\n\n\n\n    Modules\n    PetsResolverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PetsResolverModule\n\n\n\ncluster_PetsResolverModule_imports\n\n\n\n\nPetsServiceModule\n\nPetsServiceModule\n\n\n\nPetsResolverModule\n\nPetsResolverModule\n\nPetsResolverModule -->\n\nPetsServiceModule->PetsResolverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/resolver/pets/pets.resolver.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PetsServiceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PetsServiceModule } from '../../service/pets/pets.service.module';\nimport { PetsResolver } from './pets.resolver';\n\n@Module({\n    imports: [PetsServiceModule],\n    providers: [PetsResolver],\n    exports: [],\n})\nexport class PetsResolverModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PetsService.html":{"url":"injectables/PetsService.html","title":"injectable - PetsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PetsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/service/pets/pets.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAndCountAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(petsCore: PetsCore)\n                    \n                \n                        \n                            \n                                Defined in src/common/service/pets/pets.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        petsCore\n                                                  \n                                                        \n                                                                        PetsCore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPetInput: CreatePetInputDto, options?: SaveOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/common/service/pets/pets.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPetInput\n                                    \n                                                CreatePetInputDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            SaveOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAndCountAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAndCountAll(query: FilterPetDto, options?: FindAndCountOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/common/service/pets/pets.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterPetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindAndCountOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number, options?: FindOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/common/service/pets/pets.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number, options?: InstanceDestroyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/common/service/pets/pets.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            InstanceDestroyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updatePetInput: UpdatePetInputDto, options?: InstanceUpdateOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/common/service/pets/pets.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePetInput\n                                    \n                                                UpdatePetInputDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            InstanceUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    BadRequestException,\n    Injectable,\n    NotFoundException,\n} from '@nestjs/common';\nimport {\n    FindOptions,\n    FindAndCountOptions,\n    SaveOptions,\n    InstanceUpdateOptions,\n    InstanceDestroyOptions,\n} from 'sequelize';\nimport { Pet } from '../../../providers/database/pg/models/index.model';\nimport { PetsCore } from '../../core/pets/pets.core';\nimport {\n    CreatePetInputDto,\n    UpdatePetInputDto,\n    FilterPetDto,\n    FindAndCountAllPetResponseDto,\n} from '../../dto/index.dto';\n\n@Injectable()\nexport class PetsService {\n    constructor(private readonly petsCore: PetsCore) {}\n\n    async create(createPetInput: CreatePetInputDto, options?: SaveOptions) {\n        const pet = await this.petsCore.findOne({ name: createPetInput.name });\n        if (pet) {\n            throw new BadRequestException({\n                code: 'ALREADY_EXIST_ERROR',\n                message: 'pet already exist',\n            });\n        }\n\n        const createPet = await this.petsCore.create(createPetInput, options);\n        return createPet;\n    }\n\n    async findAndCountAll(\n        query: FilterPetDto,\n        options?: FindAndCountOptions,\n    ): Promise {\n        const pets = await this.petsCore.findAndCountAll(query, options);\n        return pets;\n    }\n\n    async findOne(id: number, options?: FindOptions): Promise {\n        const pet = await this.petsCore.findOne({ id }, options);\n        if (!pet) {\n            throw new NotFoundException({\n                code: 'NOT_FOUND_ERROR',\n                message: 'pet not found',\n            });\n        }\n        return pet;\n    }\n\n    async update(\n        id: number,\n        updatePetInput: UpdatePetInputDto,\n        options?: InstanceUpdateOptions,\n    ): Promise {\n        const pet = await this.petsCore.findOne({ id });\n        if (!pet) {\n            throw new NotFoundException({\n                code: 'NOT_FOUND_ERROR',\n                message: 'pet not found',\n            });\n        }\n\n        return pet.update(updatePetInput, options);\n    }\n\n    async remove(id: number, options?: InstanceDestroyOptions): Promise {\n        const pet = await this.petsCore.findOne({ id }, options);\n        if (!pet) {\n            throw new NotFoundException({\n                code: 'NOT_FOUND_ERROR',\n                message: 'pet not found',\n            });\n        }\n\n        return pet.destroy();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PetsServiceModule.html":{"url":"modules/PetsServiceModule.html","title":"module - PetsServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    PetsServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PetsServiceModule\n\n\n\ncluster_PetsServiceModule_exports\n\n\n\ncluster_PetsServiceModule_providers\n\n\n\ncluster_PetsServiceModule_imports\n\n\n\n\nPetsCoreModule\n\nPetsCoreModule\n\n\n\nPetsServiceModule\n\nPetsServiceModule\n\nPetsServiceModule -->\n\nPetsCoreModule->PetsServiceModule\n\n\n\n\n\nPetsService \n\nPetsService \n\nPetsService  -->\n\nPetsServiceModule->PetsService \n\n\n\n\n\nPetsCore\n\nPetsCore\n\nPetsServiceModule -->\n\nPetsCore->PetsServiceModule\n\n\n\n\n\nPetsService\n\nPetsService\n\nPetsServiceModule -->\n\nPetsService->PetsServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/service/pets/pets.service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PetsCore\n                        \n                        \n                            PetsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PetsCoreModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PetsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PetsService } from './pets.service';\nimport { PetsCoreModule } from '../../core/pets/pets.core.module';\nimport { PetsCore } from '../../core/pets/pets.core';\n\n@Module({\n    imports: [PetsCoreModule],\n    providers: [PetsCore, PetsService],\n    exports: [PetsService],\n})\nexport class PetsServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PinoLoggerModule.html":{"url":"modules/PinoLoggerModule.html","title":"module - PinoLoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    PinoLoggerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/providers/logger/pino-logger.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { LoggerModule } from 'nestjs-pino';\n\n@Module({\n    imports: [\n        LoggerModule.forRootAsync({\n            useFactory: async (config: ConfigService) => {\n                const commonConfig = config.get('common');\n                return {\n                    pinoHttp:\n                        commonConfig.env === 'production'\n                            ? {}\n                            : {\n                                  transport: {\n                                      target: 'pino-pretty',\n                                      options: {\n                                          colorize: true,\n                                          levelFirst: true,\n                                          translateTime:\n                                              'UTC:mm/dd/yyyy, h:MM:ss TT Z',\n                                      },\n                                  },\n                              },\n                };\n            },\n            inject: [ConfigService],\n        }),\n    ],\n})\nexport class PinoLoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostgresModule.html":{"url":"modules/PostgresModule.html","title":"module - PostgresModule","body":"\n                   \n\n\n\n\n    Modules\n    PostgresModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/providers/database/pg/postgresql.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { ConfigService } from '@nestjs/config';\nimport { Pet } from './models/index.model';\n\n@Module({\n    imports: [\n        SequelizeModule.forRootAsync({\n            useFactory: async (config: ConfigService) => {\n                const dbConfig = config.get('db');\n                const commonConfig = config.get('common');\n                const dbObject = {\n                    development: {\n                        dialect: dbConfig.pg_db.dialect,\n                        host: dbConfig.pg_db.host,\n                        port: dbConfig.pg_db.port,\n                        username: dbConfig.pg_db.username,\n                        password: dbConfig.pg_db.password,\n                        database: dbConfig.pg_db.db,\n                    },\n                    test: {\n                        dialect: dbConfig.pg_db.dialect,\n                        host: dbConfig.pg_db.host,\n                        port: dbConfig.pg_db.port,\n                        username: dbConfig.pg_db.username,\n                        password: dbConfig.pg_db.password,\n                        database: dbConfig.pg_db.test_db,\n                    },\n                    production: {\n                        dialect: dbConfig.pg_db.dialect,\n                        host: dbConfig.pg_db.host,\n                        port: dbConfig.pg_db.port,\n                        username: dbConfig.pg_db.username,\n                        password: dbConfig.pg_db.password,\n                        database: dbConfig.pg_db.db,\n                    },\n                };\n                return {\n                    ...dbObject[commonConfig.env],\n                    synchronize: true,\n                    sync: true,\n                    logging: false,\n                    pool: {\n                        max: 10,\n                    },\n                    models: [Pet],\n                    autoLoadModels: false,\n                };\n            },\n            inject: [ConfigService],\n        }),\n    ],\n})\nexport class PostgresModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            result\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Response {\n    status?: number;\n    code: number | string;\n    message: string;\n    result?: any;\n}\n\nexport interface GqlResponse {\n    code: number | string;\n    message: string;\n}\n\nexport interface IFindAndCountAll {\n    count: number;\n    rows: Type;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePetInputDto.html":{"url":"classes/UpdatePetInputDto.html","title":"class - UpdatePetInputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePetInputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/pet.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pet.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ArgsType,\n    Field,\n    InputType,\n    Int,\n    ObjectType,\n    PartialType,\n} from '@nestjs/graphql';\nimport { OrderType, Pagination, PetOrderBy } from '../../constants/enums';\nimport { Pet } from '../../providers/database/pg/models/pets.model';\n\n@InputType()\nexport class CreatePetInputDto {\n    @Field(() => String)\n    name: string;\n}\n\n@InputType()\nexport class UpdatePetInputDto extends PartialType(CreatePetInputDto) {\n    @Field(() => String, { nullable: true })\n    name?: string;\n}\n\n@ArgsType()\nexport class FilterPetDto {\n    @Field(() => Pagination, { nullable: true })\n    pagination?: Pagination;\n\n    @Field(() => Int, { nullable: true })\n    page?: number;\n\n    @Field(() => Int, { nullable: true })\n    row?: number;\n\n    @Field(() => PetOrderBy, { nullable: true })\n    order_by?: PetOrderBy;\n\n    @Field(() => OrderType, { nullable: true })\n    order_type?: OrderType;\n\n    @Field(() => String, { nullable: true })\n    search?: string;\n}\n\n@ObjectType()\nexport class FindAndCountAllPetResponseDto {\n    @Field(() => Int, { nullable: false })\n    count: number;\n\n    @Field(() => [Pet], { nullable: false })\n    rows: Pet[];\n}\n\n@ArgsType()\nexport class FindOneFilterPetDto {\n    @Field(() => Int, { nullable: true })\n    id?: number;\n\n    @Field(() => String, { nullable: true })\n    name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/core/pets/pets.core.ts\n            \n            injectable\n            PetsCore\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/dto/pet.dto.ts\n            \n            class\n            CreatePetInputDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/dto/pet.dto.ts\n            \n            class\n            FilterPetDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/dto/pet.dto.ts\n            \n            class\n            FindAndCountAllPetResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/dto/pet.dto.ts\n            \n            class\n            FindOneFilterPetDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/dto/pet.dto.ts\n            \n            class\n            UpdatePetInputDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/dto/response.dto.ts\n            \n            class\n            GqlResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/helpers/misc.helper.ts\n            \n            variable\n            CreatePagination\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interfaces/pet.interface.ts\n            \n            interface\n            IOptionalPet\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/interfaces/pet.interface.ts\n            \n            interface\n            IPet\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/interfaces/response.interface.ts\n            \n            interface\n            GqlResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interfaces/response.interface.ts\n            \n            interface\n            IFindAndCountAll\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interfaces/response.interface.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/resolver/pets/pets.resolver.ts\n            \n            class\n            PetsResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/service/pets/pets.service.ts\n            \n            injectable\n            PetsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/configs/validation.ts\n            \n            variable\n            validationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/error-codes.ts\n            \n            variable\n            BAD_REQUEST_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/error-codes.ts\n            \n            variable\n            FORBIDDEN_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/error-codes.ts\n            \n            variable\n            NOT_FOUND_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/error-codes.ts\n            \n            variable\n            SERVICE_NOT_AVAILABLE_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/error-codes.ts\n            \n            variable\n            SYSTEM_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/error-codes.ts\n            \n            variable\n            UNAUTHORIZED_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/error-codes.ts\n            \n            variable\n            VALIDATION_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/success-codes.ts\n            \n            variable\n            SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/filters/gql-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/database/pg/models/pets.model.ts\n            \n            class\n            Pet\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/apollo : ^10.0.16\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/graphql : ^10.0.16\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/sequelize : ^8.0.1\n        \n            @sentry/node : ^7.6.0\n        \n            @sentry/tracing : ^7.5.1\n        \n            apollo-server-express : ^3.9.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            cross-env : ^7.0.3\n        \n            crypto-js : ^4.1.1\n        \n            cz-conventional-changelog : ^3.3.0\n        \n            dotenv : ^16.0.1\n        \n            graphql : ^16.5.0\n        \n            helmet : ^5.1.0\n        \n            joi : ^17.6.0\n        \n            moment : ^2.29.3\n        \n            moment-timezone : ^0.5.34\n        \n            morgan : ^1.10.0\n        \n            nestjs-pino : ^2.6.0\n        \n            pg : ^8.7.3\n        \n            pino-pretty : ^8.1.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ErrorResponsePrefix   (src/.../enums.ts)\n                        \n                        \n                            OrderType   (src/.../enums.ts)\n                        \n                        \n                            Pagination   (src/.../enums.ts)\n                        \n                        \n                            PetOrderBy   (src/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorResponsePrefix\n                    \n                \n                        \n                            \n                                 UnauthorizedError\n                            \n                        \n                        \n                            \n                                Value : UnauthorizedError\n                            \n                        \n                        \n                            \n                                 NotFoundError\n                            \n                        \n                        \n                            \n                                Value : NotFoundError\n                            \n                        \n                        \n                            \n                                 SystemError\n                            \n                        \n                        \n                            \n                                Value : SystemError\n                            \n                        \n                        \n                            \n                                 ValidationError\n                            \n                        \n                        \n                            \n                                Value : ValidationError\n                            \n                        \n                        \n                            \n                                 InternalServerError\n                            \n                        \n                        \n                            \n                                Value : InternalServerError\n                            \n                        \n                        \n                            \n                                 UnavailableServiceError\n                            \n                        \n                        \n                            \n                                Value : UnavailableServiceError\n                            \n                        \n                        \n                            \n                                 ForbiddenError\n                            \n                        \n                        \n                            \n                                Value : ForbiddenError\n                            \n                        \n                        \n                            \n                                 BadRequestError\n                            \n                        \n                        \n                            \n                                Value : BadRequestError\n                            \n                        \n                        \n                            \n                                 ApiNotFoundError\n                            \n                        \n                        \n                            \n                                Value : ApiNotFoundError\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        OrderType\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Pagination\n                    \n                \n                        \n                            \n                                 yes\n                            \n                        \n                        \n                            \n                                Value : true\n                            \n                        \n                        \n                            \n                                 no\n                            \n                        \n                        \n                            \n                                Value : false\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PetOrderBy\n                    \n                \n                        \n                            \n                                 id\n                            \n                        \n                        \n                            \n                                Value : id\n                            \n                        \n                        \n                            \n                                 name\n                            \n                        \n                        \n                            \n                                Value : name\n                            \n                        \n                        \n                            \n                                 created_at\n                            \n                        \n                        \n                            \n                                Value : created_at\n                            \n                        \n                        \n                            \n                                 updated_at\n                            \n                        \n                        \n                            \n                                Value : updated_at\n                            \n                        \n                        \n                            \n                                 deleted_at\n                            \n                        \n                        \n                            \n                                Value : deleted_at\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nnest-graphql\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PetsCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PetsResolverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PetsServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PinoLoggerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostgresModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppConfigModule\n\n\n\ncluster_AppConfigModule_exports\n\n\n\ncluster_MainModule\n\n\n\ncluster_MainModule_imports\n\n\n\ncluster_PetsCoreModule\n\n\n\ncluster_PetsCoreModule_providers\n\n\n\ncluster_PetsResolverModule\n\n\n\ncluster_PetsResolverModule_imports\n\n\n\ncluster_PetsServiceModule\n\n\n\ncluster_PetsServiceModule_exports\n\n\n\ncluster_PetsServiceModule_providers\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nAppConfigModule\n\nAppConfigModule\n\nConfigService  -->\n\nAppConfigModule->ConfigService \n\n\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nAppConfigModule->MainModule\n\n\n\n\n\nPetsResolverModule\n\nPetsResolverModule\n\nMainModule -->\n\nPetsResolverModule->MainModule\n\n\n\n\n\nPinoLoggerModule\n\nPinoLoggerModule\n\nMainModule -->\n\nPinoLoggerModule->MainModule\n\n\n\n\n\nPostgresModule\n\nPostgresModule\n\nMainModule -->\n\nPostgresModule->MainModule\n\n\n\n\n\nPetsCore\n\nPetsCore\n\n\n\nPetsCoreModule\n\nPetsCoreModule\n\nPetsCoreModule -->\n\nPetsCore->PetsCoreModule\n\n\n\n\n\nPetsServiceModule\n\nPetsServiceModule\n\nPetsServiceModule -->\n\nPetsCore->PetsServiceModule\n\n\n\nPetsServiceModule -->\n\nPetsCoreModule->PetsServiceModule\n\n\n\nPetsResolverModule -->\n\nPetsServiceModule->PetsResolverModule\n\n\n\n\n\nPetsService \n\nPetsService \n\nPetsService  -->\n\nPetsServiceModule->PetsService \n\n\n\n\n\nPetsService\n\nPetsService\n\nPetsServiceModule -->\n\nPetsService->PetsServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BAD_REQUEST_ERROR   (src/.../error-codes.ts)\n                        \n                        \n                            CreatePagination   (src/.../misc.helper.ts)\n                        \n                        \n                            FORBIDDEN_ERROR   (src/.../error-codes.ts)\n                        \n                        \n                            NOT_FOUND_ERROR   (src/.../error-codes.ts)\n                        \n                        \n                            SERVICE_NOT_AVAILABLE_ERROR   (src/.../error-codes.ts)\n                        \n                        \n                            SUCCESS   (src/.../success-codes.ts)\n                        \n                        \n                            SYSTEM_ERROR   (src/.../error-codes.ts)\n                        \n                        \n                            UNAUTHORIZED_ERROR   (src/.../error-codes.ts)\n                        \n                        \n                            VALIDATION_ERROR   (src/.../error-codes.ts)\n                        \n                        \n                            validationSchema   (src/.../validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants/error-codes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BAD_REQUEST_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    code: ErrorResponsePrefix.BadRequestError,\n    message: 'Bad request',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FORBIDDEN_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    code: ErrorResponsePrefix.ForbiddenError,\n    message: 'Forbidden',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    code: ErrorResponsePrefix.BadRequestError,\n    message: 'Not found',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERVICE_NOT_AVAILABLE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    code: ErrorResponsePrefix.UnavailableServiceError,\n    message: 'Service unavailable',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SYSTEM_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    code: ErrorResponsePrefix.InternalServerError,\n    message: 'System error',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UNAUTHORIZED_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    code: ErrorResponsePrefix.UnauthorizedError,\n    message: 'Unauthorized',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VALIDATION_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    code: ErrorResponsePrefix.ValidationError,\n    message: 'Validation error',\n}\n                    \n                \n\n\n        \n    \n\n    src/common/helpers/misc.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreatePagination\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (page = 1, row = 10) => {\n    return {\n        row,\n        page: (page - 1) * row,\n    };\n}\n                    \n                \n\n\n        \n    \n\n    src/constants/success-codes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SUCCESS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    code: 0,\n    message: 'Success',\n}\n                    \n                \n\n\n        \n    \n\n    src/configs/validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n    NODE_ENV: Joi.string()\n        .allow('development', 'production', 'test', 'provision')\n        .default('development'),\n    PORT: Joi.number().default(4000),\n    API_VERSION: Joi.string().default('1').description('API Version'),\n    JWT_SECRET: Joi.string()\n        .required()\n        .description('JWT Secret required to sign'),\n    POSTGRES_DB: Joi.string()\n        .default('api')\n        .description('Postgres database name'),\n    POSTGRES_TEST_DB: Joi.string()\n        .default('api-test')\n        .description('Postgres database for tests'),\n    POSTGRES_PORT: Joi.number().default(5432),\n    POSTGRES_HOST: Joi.string().default('localhost'),\n    POSTGRES_USERNAME: Joi.string()\n        .required()\n        .default('postgres')\n        .description('Postgres username'),\n    POSTGRES_PASSWORD: Joi.string()\n        .allow('')\n        .default('password')\n        .description('Postgres password'),\n    POSTGRES_SSL: Joi.bool()\n        .default(false)\n        .description('Enable SSL connection to PostgreSQL'),\n    POSTGRES_CERT_CA: Joi.string().description('SSL certificate CA'), // Certificate itself, not a filename\n})\n    .unknown()\n    .required()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
